#load-if-not-defined DE-AVAILABLE
(defrule
(or	(game-time >= 42)
(or	(taunt-detected my-player-number 250)
(or	(taunt-detected any-ally 250)
	(taunt-detected any-enemy 250))))
=>
	(chat-to-player my-player-number "Promi 2.09brc2")
	(chat-to-player every-ally "Promi 2.09brc2")
	(chat-to-player every-enemy "Promi 2.09brc2")
;	(acknowledge-taunt my-player-number 250)
;	(acknowledge-taunt every-ally 250); strat
	(acknowledge-taunt every-enemy 250)
	(disable-self))
(defrule
	(game-time >= 10)
=>
	(chat-to-all "gl hf")
	(disable-self))
(defrule
(or	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
	(game-time <= 69)
	(up-compare-goal strategylocked != yes)
=>
	(chat-to-player my-player-number text-still-selecting-strategy)
	;(chat-to-player every-ally text-still-selecting-strategy)
	(disable-self))
(defrule
(or	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
(or	(game-time >= 70)
	(goal strategylocked yes))
	(goal strategy drush)
=>
	(chat-to-player my-player-number text-attempt-drush)
	;(chat-to-player every-ally text-attempt-drush)
	(chat-to-player-using-id every-ally 11475); "Attack the enemy with Militia."
	(acknowledge-taunt my-player-number strategy-taunt)
	(acknowledge-taunt every-ally strategy-taunt))
(defrule
(or	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
(or	(game-time >= 70)
	(goal strategylocked yes))
	(goal strategy r-flush)
	(up-compare-goal sk-var == yes)
=>
	(chat-to-player my-player-number text-attempt-r-sk)
	;(chat-to-player every-ally text-attempt-r-sk)
	(chat-to-player-using-id every-ally 11477); "Attack the enemy with Skirmishers."
	(acknowledge-taunt my-player-number strategy-taunt)
	(acknowledge-taunt every-ally strategy-taunt))
(defrule
(or	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
(or	(game-time >= 70)
	(goal strategylocked yes))
	(goal strategy r-flush)
	(up-compare-goal sk-var != yes)
=>
	(chat-to-player my-player-number text-attempt-r-flush)
	;(chat-to-player every-ally text-attempt-r-flush)
	(chat-to-player-using-id every-ally 11478); "Attack the enemy with a mix of Archers and Skirmishers."
	(acknowledge-taunt my-player-number strategy-taunt)
	(acknowledge-taunt every-ally strategy-taunt))
(defrule
(or	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
(or	(game-time >= 70)
	(goal strategylocked yes))
	(goal strategy s-flush)
=>
	(chat-to-player my-player-number text-attempt-s-flush)
	;(chat-to-player every-ally text-attempt-s-flush)
	(chat-to-player-using-id every-ally 11479); "Attack the enemy with Scout Cavalry."
	(acknowledge-taunt my-player-number strategy-taunt)
	(acknowledge-taunt every-ally strategy-taunt))
(defrule
(or	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
(or	(game-time >= 70)
	(goal strategylocked yes))
	(goal strategy a-rush)
=>
	(chat-to-player my-player-number text-attempt-a-rush)
	;(chat-to-player every-ally text-attempt-a-rush)
	(chat-to-player-using-id every-ally 11483); "Attack the enemy with Crossbowmen."
	(acknowledge-taunt my-player-number strategy-taunt)
	(acknowledge-taunt every-ally strategy-taunt))
(defrule
(or	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
(or	(game-time >= 70)
	(goal strategylocked yes))
	(goal strategy ca-rush)
=>
	(chat-to-player my-player-number text-attempt-ca-rush)
	;(chat-to-player every-ally text-attempt-ca-rush)
	(chat-to-player-using-id every-ally 11484); "Attack the enemy with Cavalry Archers."
	(acknowledge-taunt my-player-number strategy-taunt)
	(acknowledge-taunt every-ally strategy-taunt))
(defrule
(or	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
(or	(game-time >= 70)
	(goal strategylocked yes))
(or	(building-type-count-total town-center < 3)
	(building-type-count-total stable < 2))
	(goal strategy krush)
	(up-compare-goal kr-var <= 1)
=>
	(chat-to-player my-player-number text-krush-stables1)
	;(chat-to-player every-ally text-krush-stables1)
)
(defrule
(or	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
(or	(game-time >= 70)
	(goal strategylocked yes))
(or	(building-type-count-total town-center < 3)
	(building-type-count-total stable < 2))
	(goal strategy krush)
	(up-compare-goal kr-var >= 2)
=>
	(chat-to-player my-player-number text-krush-stables2)
	;(chat-to-player every-ally text-krush-stables2)
)
(defrule
(or	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
(or	(game-time >= 70)
	(goal strategylocked yes))
	(goal strategy krush)
;	(up-compare-goal kr-var <= 1)
=>
	(chat-to-player my-player-number text-attempt-krush)
	;(chat-to-player every-ally text-attempt-krush)
	(chat-to-player-using-id every-ally 11486); "Attack the enemy with Knights."
;	(chat-to-player my-player-number text-krush-stables1)
;	;(chat-to-player every-ally text-krush-stables1)
	(acknowledge-taunt my-player-number strategy-taunt)
	(acknowledge-taunt every-ally strategy-taunt))
;(defrule
;(or	(taunt-detected my-player-number strategy-taunt)
;	(taunt-detected any-ally strategy-taunt))
;(or	(game-time >= 70)
;	(goal strategylocked yes))
;	(goal strategy krush)
;	(up-compare-goal kr-var >= 2)
;=>
;	(chat-to-player my-player-number text-attempt-krush)
;	;(chat-to-player every-ally text-attempt-krush)
;;	(chat-to-player my-player-number text-krush-stables2)
;;	;(chat-to-player every-ally text-krush-stables2)
;	(acknowledge-taunt my-player-number strategy-taunt)
;	(acknowledge-taunt every-ally strategy-taunt))
(defrule
(or	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
(or	(game-time >= 70)
	(goal strategylocked yes))
	(goal strategy castledrop)
=>
	(chat-to-player my-player-number text-attempt-castledrop)
	;(chat-to-player every-ally text-attempt-castledrop)
	(chat-to-player-using-id every-ally 11485); "Attack the enemy with Unique Units."
	(acknowledge-taunt my-player-number strategy-taunt)
	(acknowledge-taunt every-ally strategy-taunt))
(defrule
(or	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
(or	(game-time >= 70)
	(goal strategylocked yes))
	(goal strategy stonewall)
=>
	(chat-to-player my-player-number text-attempt-eew)
	;(chat-to-player every-ally text-attempt-eew)
	(chat-to-player-using-id every-ally 11493); "Attack the enemy with Elite Eagle Warriors."
	(acknowledge-taunt my-player-number strategy-taunt)
	(acknowledge-taunt every-ally strategy-taunt))
(defrule
(or	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
(or	(game-time >= 70)
	(goal strategylocked yes))
	(goal strategy sling)
=>
	(chat-to-player my-player-number text-attempt-sling)
	;(chat-to-player every-ally text-attempt-sling)
	(chat-to-player-using-id every-ally 11459); "Prepare to train a large army, I will send you as many resources as I can spare."
	(acknowledge-taunt my-player-number strategy-taunt)
	(acknowledge-taunt every-ally strategy-taunt))
(defrule
(or	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
(or	(game-time >= 70)
	(goal strategylocked yes))
	(goal strategy grush)
=>
	(chat-to-player my-player-number text-attempt-grush)
	;(chat-to-player every-ally text-attempt-grush)
	(chat-to-player-using-id every-ally 11496); "Attack the enemy with Galleys."
	(acknowledge-taunt my-player-number strategy-taunt)
	(acknowledge-taunt every-ally strategy-taunt))
(defrule
(or	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
(or	(game-time >= 70)
	(goal strategylocked yes))
	(goal milunits no)
	(up-compare-goal strategy != stonewall)
	(up-compare-goal strategy != sling)
=>
	(chat-to-player my-player-number text-attempt-boom)
	;(chat-to-player every-ally text-attempt-boom)
	(chat-to-player-using-id every-ally 11432); "Create Extra Villagers"
	(acknowledge-taunt my-player-number strategy-taunt)
	(acknowledge-taunt every-ally strategy-taunt))
#else
(defrule
(or	(taunt-detected my-player-number 250)
(or	(taunt-detected any-ally 250)
	(taunt-detected any-enemy 250)))
=>
	(chat-to-player my-player-number "The official DE AI - created by Marius 'Promi' Beck."); Marius.Beck@gmx.de /
	(chat-to-player every-ally "The official DE AI - created by Marius 'Promi' Beck."); mimichesqu@gmail.com /
	(chat-to-player every-enemy "The official DE AI - created by Marius 'Promi' Beck."); mbeck@forgottenempires.net
;	(acknowledge-taunt my-player-number 250)
;	(acknowledge-taunt every-ally 250); strat
	(acknowledge-taunt every-enemy 250)
	(disable-self))
#end-if
(defrule
(or	(nor	(taunt-detected my-player-number strategy-taunt)
		(taunt-detected any-ally strategy-taunt))
	(nor	(game-time >= 70)
		(goal strategylocked yes)))
=>
	(up-jump-rule 28))
(defrule
	(current-age <= dark-age)
	(goal strategy drush)
=>
	(chat-to-player-using-id every-ally 11475); "Attack the enemy with Militia."
	(up-jump-rule 27))
(defrule
	(current-age <= feudal-age)
	(up-compare-goal maa-var == yes)
	(goal strategy r-flush)
=>
	(chat-to-player-using-id every-ally 11480); "Attack the enemy with Men-at-Arms."
	(up-jump-rule 26))
(defrule
(or	(goal strategy s-flush)
	(and	(strategic-number sn-current-age >= imperial)
		(up-compare-const default-unit == trainhussar)))
=>
	(chat-to-player-using-id every-ally 11479); "Attack the enemy with Scout Cavalry."
	(up-jump-rule 25))
(defrule
	(current-age <= feudal-age)
	(goal traineagle yes)
=>
	(chat-to-player-using-id every-ally 11481); "Attack the enemy with Eagle Scouts."
	(up-jump-rule 24))
(defrule
	(goal strategy trush)
=>
	(chat-to-player-using-id every-ally 11482); "Attack the enemy with Towers."
	(up-jump-rule 23))
(defrule
(or	(and	(goal strategy r-flush)
		(up-compare-goal sk-var != yes))
	(and	(current-age <= feudal-age)
		(and	(goal trainarcher yes)
			(goal trainskirm yes))))
=>
	(chat-to-player-using-id every-ally 11478); "Attack the enemy with a mix of Archers and Skirmishers."
	(up-jump-rule 22))
(defrule
	(current-age <= feudal-age)
	(goal trainarcher yes)
	(goal trainskirm no)
	(goal strategy usual)
=>
	(chat-to-player-using-id every-ally 11476); "Attack the enemy with Archers."
	(up-jump-rule 21))
(defrule
(or	(and	(current-age <= feudal-age)
		(and	(goal trainarcher no)
			(goal trainskirm yes)))
(or	(and	(goal strategy r-flush)
		(goal sk-var yes))
	(and	(strategic-number sn-current-age >= imperial)
		(up-compare-const default-unit == trainskirm))))
=>
	(chat-to-player-using-id every-ally 11477); "Attack the enemy with Skirmishers."
	(up-jump-rule 20))
(defrule
	(current-age <= castle-age)
(or	(goal strategy a-rush)
	(and	(goal strategy usual)
		(goal trainarcher yes)))
=>
	(chat-to-player-using-id every-ally 11483); "Attack the enemy with Crossbowmen."
	(up-jump-rule 19))
(defrule
(or	(goal strategy ca-rush)
(or	(and	(goal strategy usual)
		(goal traincavarcher yes))
	(and	(strategic-number sn-current-age >= imperial)
		(up-compare-const default-unit == traincavarcher))))
=>
	(chat-to-player-using-id every-ally 11484); "Attack the enemy with Cavalry Archers."
	(up-jump-rule 18))
(defrule
(or	(goal strategy castledrop)
(or	(and	(goal strategy usual)
		(goal trainunique yes))
	(and	(strategic-number sn-current-age >= imperial)
		(or	(goal uugoal yes)
			(goal trainunique yes)))));(up-compare-const default-unit == trainunique)))))
=>
	(chat-to-player-using-id every-ally 11485); "Attack the enemy with Unique Units."
	(up-jump-rule 17))
(defrule
(or	(and	(up-research-status c: imperial-age >= research-pending)
		(goal palagoal yes))
(or	(goal strategy krush)
(or	(and	(goal strategy usual)
		(goal trainknight yes))
	(and	(strategic-number sn-current-age >= imperial)
		(up-compare-const default-unit == trainknight)))))
=>
	(chat-to-player-using-id every-ally 11486); "Attack the enemy with Knights."
	(up-jump-rule 16))
(defrule
	(up-research-status c: castle-age >= research-pending)
(or	(and	(goal strategy usual)
		(goal trainbattle yes))
	(and	(strategic-number sn-current-age >= imperial)
		(up-compare-const default-unit == trainbattle)))
=>
	(chat-to-player-using-id every-ally 11487); "Attack the enemy with Battle Elephants."
	(up-jump-rule 15))
(defrule
	(up-research-status c: castle-age >= research-pending)
(or	(and	(goal strategy usual)
		(goal trainscorpion yes))
	(and	(strategic-number sn-current-age >= imperial)
		(up-compare-const default-unit == trainscorpion)))
=>
	(chat-to-player-using-id every-ally 11488); "Attack the enemy with Scorpions."
	(up-jump-rule 14))
(defrule
	(up-research-status c: castle-age >= research-pending)
;(or	(and	(goal strategy usual)
;		(goal trainmonk yes)
	(and	(strategic-number sn-current-age >= imperial)
		(up-compare-const default-unit == trainmonk));)
=>
	(chat-to-player-using-id every-ally 11489); "Attack the enemy with Monks."
	(up-jump-rule 13))
(defrule
	(up-research-status c: castle-age >= research-pending)
	(goal trainmonk yes)
	(goal trainmangonel yes)
(or	(up-compare-goal strategy-type <= castle-war)
(or	(up-research-status c: ri-redemption >= research-pending)
	(up-research-status c: ri-onager >= research-pending)))
=>
	(chat-to-player-using-id every-ally 11490); "Attack the enemy with Monks and Mangonels."
	(up-jump-rule 12))
(defrule
	(up-research-status c: castle-age >= research-available)
	(current-age <= castle-age)
	(goal strategy usual)
	(goal traineagle yes)
=>
	(chat-to-player-using-id every-ally 11491); "Attack the enemy with Eagle Warriors."
	(up-jump-rule 11))
(defrule
	(up-research-status c: imperial-age >= research-pending)
	(goal trainpike yes)
	(goal trainram yes)
=>
	(chat-to-player-using-id every-ally 11492); "Attack the enemy with Halberdiers and Rams."
	(up-jump-rule 10))
(defrule
(or	(goal strategy stonewall)
	(up-research-status c: imperial-age >= research-pending))
(or	(goal strategy stonewall)
(or	(goal traineagle yes)
	(and	(strategic-number sn-current-age >= imperial)
		(up-compare-const default-unit == traineagle))))
=>
	(chat-to-player-using-id every-ally 11493); "Attack the enemy with Elite Eagle Warriors."
	(up-jump-rule 9))
(defrule
	(up-research-status c: imperial-age >= research-pending)
(or	(goal trainarcher yes)
	(and	(strategic-number sn-current-age >= imperial)
		(up-compare-const default-unit == trainarcher)))
=>
	(chat-to-player-using-id every-ally 11494); "Attack the enemy with Arbalests."
	(up-jump-rule 8))
(defrule
	(up-research-status c: imperial-age >= research-pending)
(or	(goal champgoal yes)
(or	(goal trainchamp yes)
	(and	(strategic-number sn-current-age >= imperial)
		(up-compare-const default-unit == trainchamp))))
=>
	(chat-to-player-using-id every-ally 11495); "Attack the enemy with Champions."
	(up-jump-rule 7))
(defrule
	(current-age <= feudal-age)
(or	(goal trainfire yes)
	(and	(goal strategy grush)
		(goal fg-var yes)))
=>
	(chat-to-player-using-id every-ally 11497); "Attack the enemy with Fire Galleys."
	(up-jump-rule 6))
(defrule
(nand	(current-age <= feudal-age)
	(strategic-number sn-current-age >= imperial))
(or	(civ-selected portuguese)
(or	(civ-selected viking)
	(civ-selected korean)))
(or	(goal traincaravel yes)
(or	(goal trainlongboat yes)
	(goal trainturtle yes)))
;	(building-type-count dock >= 1)
=>
	(chat-to-player-using-id every-ally 11501); "Attack the enemy with Unique Warships."
	(up-jump-rule 5))
(defrule
	(current-age <= feudal-age)
(or	(goal traingalley yes)
	(goal strategy grush))
=>
	(chat-to-player-using-id every-ally 11496); "Attack the enemy with Galleys."
	(up-jump-rule 4))
(defrule
	(goal traindemo yes)
=>
	(chat-to-player-using-id every-ally 11498); "Attack the enemy with Demolition Rafts."
	(up-jump-rule 3))
(defrule
	(goal traingalley yes)
=>
	(chat-to-player-using-id every-ally 11499); "Attack the enemy with War Galleys."
	(up-jump-rule 2))
(defrule
	(goal trainfire yes)
=>
	(chat-to-player-using-id every-ally 11500); "Attack the enemy with Fire Ships."
	(up-jump-rule 1))
(defrule
	(true)
=>
	(chat-to-player my-player-number text-attempt-boom)
	;(chat-to-player every-ally text-attempt-boom)
	(chat-to-player-using-id every-ally 11432)); "Create Extra Villagers"; end jumps
(defrule
(or	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
=>
	(acknowledge-taunt my-player-number strategy-taunt)
	(acknowledge-taunt every-ally strategy-taunt))
(defrule
(or	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
(or	(game-time >= 70)
	(goal strategylocked yes))
	(goal milunits yes)
=>
	(chat-to-player my-player-number text-attempt-adapt)
	;(chat-to-player every-ally text-attempt-adapt)
	(disable-self))
(defrule
(or	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
(or	(game-time >= 70)
	(goal strategylocked yes))
	(goal milunits yes)
=>
	(chat-to-player my-player-number text-no-aggressive-strategy)
	;(chat-to-player every-ally text-no-aggressive-strategy)
;	(chat-to-player my-player-number text-attempt-adapt)
;	;(chat-to-player every-ally text-attempt-adapt)
	(acknowledge-taunt my-player-number strategy-taunt)
	(acknowledge-taunt every-ally strategy-taunt))
(defrule
(or	(game-time >= 70)
(or	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt)))
(or	(game-time >= 70)
	(goal strategylocked yes))
	(up-compare-goal strategy-type <= feudal-war)
	(up-compare-goal maa-var == yes)
	(strategic-number sn-current-age <= feudal)
	(strategic-number sn-current-age >= dfeudal)
=>
	(chat-to-player my-player-number text-attempt-add-maa)
	;(chat-to-player every-ally text-attempt-add-maa)
	(disable-self)); end jump

#load-if-not-defined DE-AVAILABLE
(defrule
(or	(taunt-detected my-player-number 250)
	(taunt-detected any-ally 250))
(or	(game-time >= 70)
	(goal strategylocked yes))
=>
	(chat-to-player my-player-number text-i-have-no-idea)
	;(chat-to-player every-ally text-i-have-no-idea)
	(acknowledge-taunt my-player-number 250)
	(acknowledge-taunt every-ally 250))
#end-if
(defrule
(or	(taunt-detected my-player-number 250)
(or	(taunt-detected any-ally 250)
(or	(taunt-detected my-player-number 43)
	(taunt-detected any-ally 43))))
(or	(game-time >= 70)
	(goal strategylocked yes))
=>
	(acknowledge-taunt my-player-number 250)
	(acknowledge-taunt every-ally 250)
	(acknowledge-taunt my-player-number 43)
	(acknowledge-taunt every-ally 43))

(defrule
	(taunt-detected any-human-ally tResourceAmount)
=>
	(up-get-fact wood-amount 0 temporary-goal); this-any-human-ally
	(up-chat-data-to-player-using-id every-ally 22080 g: temporary-goal); "Wood: %d"
	(up-get-fact food-amount 0 temporary-goal)
	(up-chat-data-to-player-using-id every-ally 22081 g: temporary-goal); "Food: %d"
	(up-get-fact gold-amount 0 temporary-goal)
	(up-chat-data-to-player-using-id every-ally 22082 g: temporary-goal); "Gold: %d"
	(up-get-fact stone-amount 0 temporary-goal)
	(up-chat-data-to-player-using-id every-ally 22083 g: temporary-goal); "Stone: %d"
	(up-chat-data-to-player-using-id every-ally 22084 g: my-pop); "Population: %d"
	(acknowledge-taunt every-ally tResourceAmount))

(defrule
	(taunt-detected any-ally 16)
(nor	(up-allied-goal any-computer-ally identity == Promi)
	(goal position-goal flank))
=>
	(chat-to-player-using-id every-ally 22073); "Go forth and thrash our opponents!"
	(acknowledge-taunt every-ally 16)
	(disable-self))

(defrule
	(game-time >= 72)
=>
	(up-jump-rule 14))
(defrule
	(game-time >= 66)
(nor	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
	(goal strategy drush)
=>
	(chat-to-player my-player-number text-attempt-drush)
	;(chat-to-player every-ally text-attempt-drush)
	(disable-self))
(defrule
	(game-time >= 66)
(nor	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
	(goal strategy r-flush)
	(goal sk-var no)
=>
	(chat-to-player my-player-number text-attempt-r-flush)
	;(chat-to-player every-ally text-attempt-r-flush)
	(disable-self))
(defrule
	(game-time >= 66)
(nor	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
	(goal strategy r-flush)
	(goal sk-var yes)
=>
	(chat-to-player my-player-number text-attempt-r-sk)
	;(chat-to-player every-ally text-attempt-r-sk)
	(disable-self))
(defrule
	(game-time >= 66)
(nor	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
	(goal strategy s-flush)
=>
	(chat-to-player my-player-number text-attempt-s-flush)
	;(chat-to-player every-ally text-attempt-s-flush)
	(disable-self))
(defrule
	(game-time >= 66)
(nor	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
	(goal strategy a-rush)
=>
	(chat-to-player my-player-number text-attempt-a-rush)
	;(chat-to-player every-ally text-attempt-a-rush)
	(disable-self))
(defrule
	(game-time >= 66)
(nor	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
	(goal strategy ca-rush)
=>
	(chat-to-player my-player-number text-attempt-ca-rush)
	;(chat-to-player every-ally text-attempt-ca-rush)
	(disable-self))
(defrule
	(game-time >= 66)
(nor	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
	(goal strategy krush)
=>
	(chat-to-player my-player-number text-attempt-krush)
	;(chat-to-player every-ally text-attempt-krush)
	(disable-self))
(defrule
	(game-time >= 66)
(nor	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
	(goal strategy castledrop)
=>
	(chat-to-player my-player-number text-attempt-castledrop)
	;(chat-to-player every-ally text-attempt-castledrop)
	(disable-self))
(defrule
	(game-time >= 66)
(nor	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
	(goal strategy stonewall)
=>
	(chat-to-player my-player-number text-attempt-eew)
	;(chat-to-player every-ally text-attempt-eew)
	(disable-self))
(defrule
	(game-time >= 66)
(nor	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
	(goal strategy sling)
=>
	(chat-to-player my-player-number text-attempt-sling)
	;(chat-to-player every-ally text-attempt-sling)
	(disable-self))
(defrule
	(game-time >= 66)
(nor	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
	(goal strategy grush)
=>
	(chat-to-player my-player-number text-attempt-grush)
	;(chat-to-player every-ally text-attempt-grush)
	(disable-self))
(defrule
	(game-time >= 66)
(nor	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
	(goal strategy fast-imp)
=>
	(chat-to-player my-player-number text-attempt-fi)
	;(chat-to-player every-ally text-attempt-fi)
	(disable-self))
(defrule
	(game-time >= 66)
(nor	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
	(goal milunits no)
	(up-compare-goal strategy != stonewall)
	(up-compare-goal strategy != sling)
	(up-compare-goal strategy != fast-imp)
=>
	(chat-to-player my-player-number text-attempt-boom)
	;(chat-to-player every-ally text-attempt-boom)
	(disable-self))
(defrule
	(game-time >= 66)
(nor	(taunt-detected my-player-number strategy-taunt)
	(taunt-detected any-ally strategy-taunt))
	(goal strategy usual)
	(goal milunits yes)
=>
	(chat-to-player my-player-number text-attempt-adapt)
	;(chat-to-player every-ally text-attempt-adapt)
	(disable-self)); end jump


#load-if-not-defined DE-AVAILABLE
(defrule
	(game-time >= 15)
=>	
	(chat-to-player my-player-number text-civ)
	;(chat-to-player every-ally text-civ)
	(disable-self))
#end-if


#load-if-not-defined WONDER-RACE
#load-if-not-defined UP-POCKET-POSITION
(defrule
	(game-time < 1080)
	(game-time >= 2)
	(player-in-game any-human-ally)
	(players-building-count target-player >= 1)
=>
	(up-full-reset-search)
	(up-get-point scouting-type point-x)
	(up-get-point position-target saved-point-x)); distance from the scouting point to the enemy
#load-if-not-defined DE-AVAILABLE
(defrule
	(game-time < 1080)
	(game-time >= 2)
	(player-in-game any-human-ally)
	(players-building-count target-player >= 1)
	(up-compare-goal saved-point-x >= 0)
(or	(up-point-distance point-x saved-point-x < 40)
	(players-building-count every-enemy >= 1))
=>
	(up-get-point position-target point-x)
	(up-send-flare point-x)
	(up-store-player-name target-player)
	(up-chat-data-to-player every-ally text-enemy-located-here c: 7031232); "%s is located in this area."
	(disable-self))
#else
(defrule
	(game-time < 1080)
	(game-time >= 2)
	(player-in-game any-human-ally)
	(players-building-count target-player >= 1)
(or	(up-point-distance point-x saved-point-x < 40)
	(players-building-count every-enemy >= 1))
=>
	(up-get-point position-target point-x)
	(up-send-flare point-x)
	(up-store-player-name target-player)
	(up-chat-data-to-player-using-id every-ally 2315 c: 7031232); "%s is located in this area."
	(disable-self))
#end-if
#else ; Pocket
(defrule
(or	(not	(player-in-game any-human-ally))
	(game-time >= 1080))
=>
	(up-jump-rule 6))
(defrule
	(timer-triggered embassy) ; 10
; 30	(timer-triggered MSuperiority)
	(goal pocketcheck 9)
=>
	(set-goal pocketcheck 0))
(defrule
	(goal pocketcheck 0)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 1))
(defrule
	(goal pocketcheck 0)
	(not	(stance-toward focus-player ally));	(stance-toward focus-player enemy)
=>
	(up-full-reset-search)
	(up-get-point scouting-type point-x)
	(up-set-target-point point-x)
	(up-filter-distance c: -1 c: 40)
	(up-find-remote c: building-class c: 1)
	(up-get-search-state local-total))
#load-if-not-defined DE-AVAILABLE
(defrule
	(goal pocketcheck 0)
	(not	(stance-toward focus-player ally));	(stance-toward focus-player enemy)
	(up-compare-goal remote-total >= 1)
=>
	(up-modify-goal pocketcheck s:= sn-focus-player-number)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object point-x)
	(up-send-flare point-x)
	(up-store-player-name focus-player)
	(up-chat-data-to-player every-ally text-enemy-located-here c: 7031232); "%s is located in this area."
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
	(disable-self))
#else
(defrule
	(goal pocketcheck 0)
	(not	(stance-toward focus-player ally));	(stance-toward focus-player enemy)
	(up-compare-goal remote-total >= 1)
=>
	(up-modify-goal pocketcheck s:= sn-focus-player-number)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object point-x)
	(up-send-flare point-x)
	(up-store-player-name focus-player)
	(up-chat-data-to-player-using-id every-ally 2315 c: 7031232); "%s is located in this area."
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
	(disable-self))
#end-if
(defrule
	(goal pocketcheck 0)
(or	(up-compare-goal remote-total < 1)
	(stance-toward focus-player ally))
	(strategic-number sn-focus-player-number < 8)
	(player-valid focus-player)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -3))
(defrule
	(goal pocketcheck 0)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
	(set-goal pocketcheck 9)); disable for a while to avoid possible lag by constant checking
#end-if

(defrule
	(building-type-count town-center <= 0)
	(building-type-count-total town-center >= 1)
	(unit-type-count villager >= 1)
	(game-time >= 16)
=>
	(up-full-reset-search)
	(up-filter-status c: status-pending c: list-active)
	(up-find-status-local c: town-center-foundation c: 16))
#load-if-not-defined DE-AVAILABLE
(defrule
	(up-set-target-object search-local c: 0)
	(building-type-count town-center <= 0)
	(building-type-count-total town-center >= 1)
	(unit-type-count villager >= 1)
	(game-time >= 16)
=>
	(up-get-point position-object temporary-point-x)
	(up-send-flare temporary-point-x)
	(chat-to-allies text-nomad-position); "I'm here."
	(disable-self))
#else
(defrule
	(up-set-target-object search-local c: 0)
	(building-type-count town-center <= 0)
	(building-type-count-total town-center >= 1)
	(unit-type-count villager >= 1)
	(game-time >= 16)
=>
	(up-get-point position-object temporary-point-x)
	(up-send-flare temporary-point-x)
	(chat-to-player-using-id every-ally 2316); "I am building a base in this location."
	(disable-self))
#end-if


(defrule
	(wood-amount < market-cost)
	(taunt-detected any-human-ally tFlareMarket)
=>
	;(chat-to-allies text-no-wood-market)
	(chat-to-player-using-id every-ally 22123); "4 Wood please!"
	(acknowledge-taunt every-ally tFlareMarket))

(defrule
	(players-unit-type-count every-ally 274 == 0)
(nor	(taunt-detected any-human-ally tFlareMarket)
	(taunt-detected any-human-ally tFlarePatrol))
	(up-timer-status market-flare-timer == timer-disabled)
	(up-timer-status unit-control-flare-timer == timer-disabled)
	(up-compare-goal market-flare != 2)
	(up-compare-goal unit-flare != 2)
=>
	(up-jump-rule 11))
(defrule
	(up-pending-objects c: market >= 2)
;	(cc-players-unit-type-count any-human-ally flare >= 1)
	(taunt-detected any-human-ally tFlareMarket)
=>
	(acknowledge-taunt every-ally tFlareMarket)
;	(disable-timer market-flare-timer)
;	(set-goal market-flare 0)
	;(chat-to-allies text-already-constructing-market)
	(chat-to-player-using-id every-ally 22118); "Alas, I cannot help that at this time."
)
(defrule
	(up-pending-objects c: market < 2)
	(taunt-detected any-human-ally tFlareMarket)
	(up-compare-goal market-flare != 2)
=>
	(enable-timer market-flare-timer 12)
	(set-goal market-flare 2)
	;(chat-to-allies text-market-placement-allowed)
	;(chat-to-allies text-flare-market)
	(up-reset-placement c: market))
(defrule
	(taunt-detected any-human-ally tFlareMarket)
;	(up-pending-objects c: market < 2)
	(cc-players-unit-type-count any-human-ally flare >= 1)
	(can-build market)
=>
	(up-find-player-flare any-human-ally building-point-x)
	(set-strategic-number sn-placement-zone-size 3); 4
	(up-set-target-point building-point-x)
	(up-build place-point 0 c: market)
	;(chat-to-allies text-market-placement-attempt)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally tFlareMarket)
	(disable-timer market-flare-timer)
	(set-goal market-flare 0))

(defrule
	(goal underattack yes)
	(taunt-detected any-human-ally tFlarePatrol)
=>
	;(chat-to-allies text-under-attack-ask-later)
	(chat-to-player-using-id every-ally 22118); "Alas, I cannot help that at this time."
	(chat-to-player-using-id every-ally 22115); "39 Help! The enemy is in my town!"
	(acknowledge-taunt every-ally tFlarePatrol)
	(up-jump-rule 7))
(defrule
	(taunt-detected any-human-ally tFlarePatrol)
	(up-compare-goal unit-flare != 2)
=>
	(enable-timer unit-control-flare-timer 12)
	(set-goal gatherinside no)
	(set-goal unit-flare 2)
	;(chat-to-allies text-unit-control-allowed)
	;(chat-to-allies text-flare-unit-control)
)
(defrule
	(timer-triggered unit-control-flare-timer)
=>
	;(chat-to-allies text-10-seconds-have-passed)
	(disable-timer unit-control-flare-timer)
	(set-goal unit-flare 0)
	(acknowledge-taunt every-ally tFlarePatrol))
(defrule
	(cc-players-unit-type-count any-human-ally flare >= 1)
	(taunt-detected any-human-ally tFlarePatrol)
=>
	(up-find-player-flare any-human-ally unit-flare-point-x)
	(set-goal temporary-goal9 125491))
(defrule
	(goal temporary-goal9 125491)
	(up-point-zone unit-flare-point-x g:== main-zone)
=>
	;(chat-to-allies text-unit-movement-attempt)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
; test	(up-reset-unit c: -1)
	(set-strategic-number sn-disable-defend-groups 1)
	(set-strategic-number sn-gather-defense-units 0)
	(enable-timer unit-control-flare-timer2 210) ; 240
	(disable-timer unit-control-flare-timer)
	(disable-timer spread)
	(set-goal retreat no)
	(set-goal reset no)
	(up-full-reset-search)
	(up-set-target-point unit-flare-point-x)
	(up-filter-distance c: 8 c: -1)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-find-local c: all-units-class c: 240)
	(set-goal temporary-goal9 125492))
(defrule
	(goal temporary-goal9 125492)
=>
	(up-filter-include cmdid-monk -1 -1 -1)
	(up-find-local c: all-units-class c: 240)
	(up-target-point 0 action-patrol -1 stance-aggressive);-defensive
	(acknowledge-taunt every-ally tFlarePatrol))
(defrule
	(up-timer-status unit-control-flare-timer2 == timer-running)
	(up-timer-status embassy == timer-triggered)
=>
; test	(up-reset-unit c: -1)
	(up-full-reset-search)
	(up-set-target-point unit-flare-point-x)
	(up-filter-distance c: 8 c: -1)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-find-local c: all-units-class c: 240)
	(up-filter-include cmdid-monk -1 -1 -1);
	(up-find-local c: all-units-class c: 240);
	(up-target-point 0 action-patrol -1 stance-aggressive);-defensive
	(chat-to-player my-player-number text-resending-units))
(defrule
	(timer-triggered unit-control-flare-timer2)
=>
	;(chat-to-allies text-taking-control-again)
	(disable-timer unit-control-flare-timer2)
	(up-reset-unit c: -1)
	(set-strategic-number sn-disable-defend-groups 0)
	(set-strategic-number sn-gather-defense-units 1)
	(enable-timer spread 90)
	(set-goal retreat yes)
	(set-goal reset yes)); end jumps

(defrule
	(taunt-detected any-human-ally 221)
=>
	;(chat-to-allies text-taking-control-again)
	(disable-timer unit-control-flare-timer2)
	(acknowledge-taunt every-ally 221)
	(up-reset-unit c: -1)
	(set-strategic-number sn-disable-defend-groups 0)
	(set-strategic-number sn-gather-defense-units 1)
	(enable-timer spread 90)
	(set-goal retreat yes)
	(set-goal reset yes))

(defrule
	(goal underattack yes)
	(up-timer-status unit-control-flare-timer2 != timer-disabled)
(or	(strategic-number sn-disable-defend-groups >= 1)
	(strategic-number sn-gather-defense-units <= 0))
=>
	(chat-to-player my-player-number text-attacked-taking-control-again)
	;(chat-to-allies text-attacked-taking-control-again)
	(disable-timer unit-control-flare-timer2)
	(up-reset-unit c: -1)
	(set-strategic-number sn-disable-defend-groups 0)
	(set-strategic-number sn-gather-defense-units 1)
	(enable-timer spread 180)
	(set-goal retreat yes)
	(set-goal reset yes))

(defrule
	(building-type-count market >= 1)
	(taunt-detected any-human-ally 147)
=>
	(acknowledge-taunt every-ally 147)
	(delete-building market)
	;(chat-to-allies text-deleting-market)
)
(defrule
	(taunt-detected any-human-ally 69)
;(or	(up-compare-const tl-game == 1)
	(up-compare-goal gl-treaty-time >= 1);)
=>
	(chat-to-player-using-id every-ally 22118); "Alas, I cannot help that at this time."
	(acknowledge-taunt every-ally 69))
(defrule
	(taunt-detected any-human-ally 69)
	(up-timer-status market-flare-timer == timer-disabled)
=>
	(enable-timer market-flare-timer 12))
(defrule
	(taunt-detected any-human-ally 69)
	(cc-players-unit-type-count any-human-ally flare >= 1)
=>
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(up-find-player-flare any-human-ally temporary-point-x)
	(up-set-target-point temporary-point-x)
	(up-full-reset-search)
	(up-filter-distance c: -1 c: 2)
	(up-find-local c: building-class c: 1)
	(up-find-local c: tower-class c: 1)
	(up-find-local c: wall-class c: 1)
	(up-find-local c: gate-class c: 1)
	(up-filter-status c: status-pending c: list-active)
	(up-find-status-local c: building-class c: 1)
	(up-find-status-local c: tower-class c: 1)
	(up-find-status-local c: wall-class c: 1)
	(up-find-status-local c: gate-class c: 1))
(defrule
	(taunt-detected any-human-ally 69)
	(cc-players-unit-type-count any-human-ally flare >= 1)
=>
	(up-clean-search search-local object-data-distance search-order-asc)
	(up-find-local c: all-units-class c: 1)
	(up-remove-objects search-local object-data-index >= 1)
	(up-target-point 0 action-delete -1 -1)
	(acknowledge-taunt every-ally 69))
(defrule
	(timer-triggered market-flare-timer)
=>
	;(chat-to-allies text-10-seconds-have-passed)
	(disable-timer market-flare-timer)
	(set-goal market-flare 0)
	(acknowledge-taunt every-ally 69)
	(acknowledge-taunt every-ally tFlareMarket))

(defrule
	(taunt-detected any-human-ally 46)
=>
	(up-full-reset-search)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-filter-exclude -1 actionid-explore orderid-explore -1)
	(up-find-local c: all-units-class c: 1))
(defrule
	(taunt-detected any-human-ally 46)
	(up-set-target-object search-local c: 0)
=>
	(up-get-point position-object temporary-point-x)
	(up-send-flare temporary-point-x)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 46))
(defrule
	(taunt-detected any-human-ally 46)
=>
	(chat-to-player-using-id every-ally 22118); "Alas, I cannot help that at this time."
	(acknowledge-taunt every-ally 46))

#load-if-not-defined ISLANDS-MAP
#load-if-not-defined TEAM-ISLANDS-MAP
#load-if-not-defined UP-MICHI-STYLE

#load-if-not-defined REGICIDE

#load-if-not-defined ARENA-MAP
#load-if-not-defined FORTRESS-MAP

(defrule
(or	(up-compare-goal position-goal != flank)
	(up-compare-goal inseln != no))
=>
	(up-jump-rule 9))
(defrule
	(map-type gold-rush)
	(cc-players-unit-type-count 0 dangerous-animal-class >= 2); todo
=>
	(up-jump-rule 2))
(defrule
(or	(taunt-detected my-player-number 76)
	(taunt-detected any-ally 76))
(or	(game-time < 300)
	(goal strategy drush))
	(strategic-number sn-current-age <= dark)
	(up-compare-const drush-affinity >= 1)
=>
	(acknowledge-taunt my-player-number 76)
	(acknowledge-taunt every-ally 76)
	(set-goal strategy drush)
	(set-goal milunits yes)
;	(set-goal drushmicro yes)
	(set-goal attackprioritychange yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-drush)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(set-goal strategylocked yes))
(defrule
(or	(taunt-detected my-player-number 76)
	(taunt-detected any-ally 76))
(or	(building-type-count-total barracks >= 1)
	(unit-type-count-total militiaman-line >= drush-militias))
	(strategic-number sn-current-age <= dark)
	(up-compare-const drush-affinity >= 1)
=>
	(acknowledge-taunt my-player-number 76)
	(acknowledge-taunt every-ally 76)
	(set-goal strategy drush)
	(set-goal milunits yes)
;	(set-goal drushmicro yes)
	(set-goal attackprioritychange yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-drush)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(set-goal strategylocked yes))
(defrule
(not	(goal strategy r-flush)); nor
=>
	(up-jump-rule 1))
(defrule
(or	(taunt-detected my-player-number 81)
	(taunt-detected any-ally 81))
(or	(game-time < 300)
(or	(strategic-number sn-current-age <= feudal)
	(goal maa-var yes)))
	(up-compare-const maa-var-affinity >= 1)
=>
	(acknowledge-taunt my-player-number 81)
	(acknowledge-taunt every-ally 81)
	(set-goal maa-var yes)
;	(set-goal attackprioritychange yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-add-maa)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
;	(set-goal strategylocked yes)
)
(defrule
	(taunt-detected my-player-number 79)
(or	(game-time < 300)
(or	(strategic-number sn-current-age <= feudal)
	(goal strategy r-flush)))
	(up-compare-const r-flush-affinity >= 1)
=>
	(acknowledge-taunt my-player-number 79)
	(set-goal strategy r-flush)
	(set-goal milunits r-flush)
	(set-goal sk-var no)
	(set-goal attackprioritychange yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-r-flush)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(set-goal strategylocked yes))
(defrule
	(taunt-detected any-ally 79)
(or	(game-time < 300)
(or	(strategic-number sn-current-age <= feudal)
	(goal strategy r-flush)))
	(up-compare-const r-flush-affinity >= 1)
=>
	(acknowledge-taunt every-ally 79)
	(set-goal strategy r-flush)
	(set-goal milunits r-flush)
	(set-goal sk-var no)
	(set-goal attackprioritychange yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-r-flush)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(set-goal strategylocked yes))
(defrule
	(taunt-detected my-player-number 78)
(or	(game-time < 300)
(or	(strategic-number sn-current-age <= feudal)
	(goal sk-var yes)))
	(up-compare-const sk-var-affinity >= 1)
=>
	(acknowledge-taunt my-player-number 78)
	(set-goal strategy r-flush)
	(set-goal milunits r-flush)
	(set-goal sk-var yes)
	(set-goal attackprioritychange yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-r-sk)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(set-goal strategylocked yes))
(defrule
	(taunt-detected any-ally 78)
(or	(game-time < 300)
(or	(strategic-number sn-current-age <= feudal)
	(goal sk-var yes)))
	(up-compare-const sk-var-affinity >= 1)
=>
	(acknowledge-taunt every-ally 78)
	(set-goal strategy r-flush)
	(set-goal milunits r-flush)
	(set-goal sk-var yes)
	(set-goal attackprioritychange yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-r-sk)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(set-goal strategylocked yes)); end jump
(defrule
	(up-compare-goal inseln != no)
=>
	(up-jump-rule 8))
(defrule
(or	(taunt-detected my-player-number 80)
	(taunt-detected any-ally 80))
(or	(game-time < 300)
(or	(strategic-number sn-current-age <= feudal)
	(goal strategy s-flush)))
	(up-compare-const s-flush-affinity >= 1)
=>
	(acknowledge-taunt my-player-number 80)
	(acknowledge-taunt every-ally 80)
	(set-goal strategy s-flush)
	(set-goal milunits s-flush)
;	(set-goal scoutmicro yes)
	(set-goal attackprioritychange yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-s-flush)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(set-goal strategylocked yes)); end jump

#end-if
#end-if

(defrule
	(up-compare-goal inseln != no)
=>
	(up-jump-rule 3))
(defrule
(or	(taunt-detected my-player-number 84)
	(taunt-detected any-ally 84))
(or	(game-time < 300)
(or	(strategic-number sn-current-age <= castlea)
	(goal strategy a-rush)))
	(up-compare-const a-rush-affinity >= 1)
=>
	(acknowledge-taunt my-player-number 84)
	(acknowledge-taunt every-ally 84)
	(set-goal strategy a-rush)
	(set-goal milunits a-rush)
	(set-goal attackprioritychange yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-a-rush)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(set-goal strategylocked yes))
(defrule
(or	(taunt-detected my-player-number 85)
	(taunt-detected any-ally 85))
(or	(game-time < 300)
(or	(strategic-number sn-current-age <= castlea)
	(goal strategy ca-rush)))
	(up-compare-const ca-rush-affinity >= 2)
=>
	(acknowledge-taunt my-player-number 85)
	(acknowledge-taunt every-ally 85)
	(set-goal strategy ca-rush)
	(set-goal milunits ca-rush)
	(set-goal attackprioritychange yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-ca-rush)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(set-goal strategylocked yes))
(defrule
(or	(taunt-detected my-player-number 87)
	(taunt-detected any-ally 87))
;(or	(goal position-goal pocket)
;	(up-compare-const mp-game == 0))
(or	(game-time < 300)
(or	(strategic-number sn-current-age <= castlea)
	(goal strategy krush)))
	(up-compare-const krush-affinity >= 1)
=>
;	(set-goal kr-var 2)
	(acknowledge-taunt my-player-number 87)
	(acknowledge-taunt every-ally 87)
	(set-goal strategy krush)
	(set-goal milunits krush)
	(set-goal attackprioritychange yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-krush)
	;(chat-to-allies text-krush-stables2)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(set-goal strategylocked yes)); end jump
;(defrule
;(or	(taunt-detected my-player-number 128)
;	(taunt-detected any-ally 128))
;;(or	(goal position-goal pocket)
;;	(up-compare-const mp-game == 0))
;(or	(game-time < 300)
;(or	(strategic-number sn-current-age <= castlea)
;	(goal strategy krush)))
;	(up-compare-const krush-affinity >= 1)
;=>
;	(set-goal kr-var 1)
;	(acknowledge-taunt my-player-number 128)
;	(acknowledge-taunt every-ally 128)
;	(set-goal strategy krush)
;	(set-goal milunits krush)
;	(set-goal attackprioritychange yes)
;	;(chat-to-allies text-understood)
;	;(chat-to-allies text-attempt-krush)
;	;(chat-to-allies text-krush-stables1)
;	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
;	(set-goal strategylocked yes)); end jump

#end-if; regicide

#end-if
#end-if
#end-if

(defrule
(or	(taunt-detected my-player-number 86)
	(taunt-detected any-ally 86))
;	(goal inseln no)
;(or	(goal position-goal pocket)
;	(up-compare-const mp-game == 0))
(or	(game-time < 300)
(or	(strategic-number sn-current-age <= castlea)
	(goal strategy castledrop)))
	(up-compare-const castledrop-affinity >= 1)
=>
	(acknowledge-taunt my-player-number 86)
	(acknowledge-taunt every-ally 86)
	(set-goal strategy castledrop)
	(set-goal milunits castledrop)
	(set-goal attackprioritychange yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-castledrop)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(set-goal strategylocked yes))

(defrule
	(taunt-detected any-human-ally 93)
(or	(goal trainpike yes)
	(and	(goal allowspears yes)
		(unit-type-count-total spearman-line >= 1)))
=>
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 93))

(defrule
(or	(up-compare-const stonewall-affinity <= 0)
(or	(up-compare-goal pocket != yes)
(or	(up-compare-goal nomaden != no)
(or	(up-compare-goal landnomad != no)
	(up-compare-goal inseln != no)))))
=>
	(up-jump-rule 1))
(defrule
(or	(taunt-detected my-player-number 94)
	(taunt-detected any-ally 94))
;	(goal milunits yes)
(or	(game-time < 300)
(or	(strategic-number sn-current-age <= cimperial); imperial
	(goal strategy drush)))
=>
	(acknowledge-taunt my-player-number 94)
	(acknowledge-taunt every-ally 94)
	(set-goal strategy stonewall)
	(set-goal milunits no)
	(set-goal attackprioritychange yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-eew)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(set-goal strategylocked yes)); end jump

(defrule
(or	(up-compare-const fi-affinity <= 0)
(or	(and	(up-compare-goal pocket != yes)
		(and	(wall-completed-percentage 1 < 100)
			(wall-completed-percentage 2 < 100)))
(or	(up-compare-goal nomaden != no)
(or	(up-compare-goal landnomad != no)
	(up-compare-goal inseln != no)))))
=>
	(up-jump-rule 1))
(defrule
(or	(taunt-detected my-player-number 95)
	(taunt-detected any-ally 95))
;	(goal milunits yes)
(or	(game-time < 300)
(or	(strategic-number sn-current-age <= castlea); cimperial
	(goal strategy drush)))
=>
	(acknowledge-taunt my-player-number 95)
	(acknowledge-taunt every-ally 95)
	(set-goal strategy fast-imp)
	(set-goal milunits no)
	(set-goal attackprioritychange yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-fi)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(set-goal strategylocked yes)); end jump

(defrule
	(taunt-detected any-human-ally 87)
	(up-compare-goal palagoal != yes)
	(up-compare-const pala-available == 1)
=>
	(set-goal palagoal yes)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 87))
(defrule
	(taunt-detected any-human-ally 87)
(or	(goal palagoal yes)
(or	(goal strategy krush)
	(goal trainknight yes)))
=>
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 87))
(defrule
	(taunt-detected any-human-ally 95)
	(goal trainarcher yes)
=>
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 95))
(defrule
	(taunt-detected any-human-ally 96)
	(up-compare-goal champgoal != yes)
	(up-compare-const champ-available == 1)
=>
	(set-goal champgoal yes)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 96))
(defrule
	(taunt-detected any-human-ally 96)
(or	(goal champgoal yes)
	(goal trainchamp yes))
=>
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 96))

(defrule
(or	(taunt-detected my-player-number 97)
	(taunt-detected any-ally 97))
	(goal map water)
;	(goal fleet yes)
;;	(goal fishing yes)
	(strategic-number sn-current-age <= castlea)
=>
	(set-goal strategy-type2 water)
	(set-goal milunits grush)
	(set-goal strategy grush)
	(set-goal attackprioritychange yes)
	(set-goal fleet yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-grush)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt my-player-number 97)
	(acknowledge-taunt every-ally 97)
	(set-goal strategylocked yes))
(defrule
(or	(taunt-detected any-human-ally 97)
	(taunt-detected any-human-ally 100))
(or	(and	(goal strategy grush)
		(goal fg-var no))
	(goal traingalley yes))
=>
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 97)
	(acknowledge-taunt every-ally 100))
(defrule
(or	(taunt-detected my-player-number 98)
	(taunt-detected any-ally 98))
	(goal map water)
	(up-compare-const wk-game == 1)
;	(goal fleet yes)
;;	(goal fishing yes)
	(strategic-number sn-current-age <= castlea)
=>
	(set-goal strategy-type2 water)
	(set-goal milunits grush)
	(set-goal strategy grush)
	(set-goal fg-var yes)
	(set-goal attackprioritychange yes)
	(set-goal fleet yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-grush)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt my-player-number 98)
	(acknowledge-taunt every-ally 98)
	(set-goal strategylocked yes))
(defrule
(or	(taunt-detected any-human-ally 98)
	(taunt-detected any-human-ally 101))
(or	(and	(goal strategy grush)
		(goal fg-var yes))
	(goal trainfire yes))
=>
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 98)
	(acknowledge-taunt every-ally 101))
(defrule
	(taunt-detected any-human-ally 99)
	(goal traindemo yes)
=>
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 99))
(defrule
	(taunt-detected any-human-ally 102)
(or	(goal trainlongboat yes)
(or	(goal trainturtle yes)
	(goal traincaravel yes)))
=>
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 102))

	

#load-if-defined UP-ALLY-IN-GAME
;#load-if-not-defined UP-MICHI-STYLE
#load-if-not-defined WONDER-RACE
#load-if-not-defined DEFEND-WONDER
;#load-if-defined UP-POCKET-POSITION
(defrule
	(current-age <= feudal-age)
	(game-time >= 2)
	(game-time < 175); 180
	(up-compare-goal gl-random-number > sling-number)
	(up-allied-goal any-ally control-goal == 6); strat which works (well) with sling
	(up-compare-const inf-game == no)
=>
	;(chat-to-player this-any-ally "137Do you want me to sling you?")
	;(chat-local-to-self "Offering sling.")
	(disable-self))
(defrule
(or	(up-compare-const dm-game == 1)
(or	(up-compare-const inf-game == yes)
	(up-compare-goal strategy == sling)))
=>
	(up-jump-rule 3))
(defrule
	(up-compare-goal verbuendete <= 3)
(or	(and	(up-allied-goal any-computer-ally identity == Promi)
		(up-allied-goal any-computer-ally strategy == sling))
(or	(and	(up-allied-goal any-computer-ally identity == Barbarian)
		(up-allied-goal any-computer-ally 19 >= 4))
	(and	(up-allied-goal any-computer-ally identity == Unknown)
		(up-allied-goal any-computer-ally 394 >= 2197))))
=>
	(up-jump-rule 2))
(defrule
	(taunt-detected any-ally 58)
	(game-time < 300)
	(current-age <= castle-age)
(or	(current-age <= feudal-age)
	(up-compare-const wk-game == 1))
	(up-compare-goal gl-random-number > sling-number)
	(up-compare-goal nomaden != yes)
=>
	(set-goal strategy sling)
	(set-goal milunits no)
	(set-goal attackprioritychange yes)
	;(set-goal strategylocked yes)
	(chat-to-player my-player-number text-attempt-sling)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-sling)
)
(defrule
(or	(taunt-detected any-human-ally 58)
	(taunt-detected my-player-number 58))
=>
	(set-goal strategy sling)
	(set-goal milunits no)
	(set-goal attackprioritychange yes)
	;(set-goal strategylocked yes)
	(chat-to-player my-player-number text-attempt-sling)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-sling)
); end jumps
;#end-if
#end-if
#end-if
;#end-if
#end-if; ally only
(defrule
	(goal strategy sling)
	(up-research-status c: ri-coinage <= research-unavailable)
	(building-type-count market >= 1)
(or	(current-age >= castle-age)
	(and	(current-age >= feudal-age)
		(up-compare-const wk-game != 1)))
	(up-resource-percent amount-tribute-inefficiency >= 16)
=>
	(set-goal strategy usual)
	(set-goal milunits no); yes
	(set-goal attackprioritychange yes)
	(chat-to-player my-player-number text-stop-slinging)
	;(chat-to-allies text-stop-slinging)
;	(chat-to-player-using-id every-ally 22073); "Go forth and thrash our opponents!"
	(acknowledge-taunt every-ally 58))
(defrule
	(goal strategy sling)
(or	(game-time >= 2400); 2700
(or	(players-tribute-memory any-ally wood >= 1001)
(or	(players-tribute-memory any-ally food >= 1001)
(or	(players-tribute-memory any-ally gold >= 1001)
	(players-tribute-memory any-ally stone >= 501)))))
=>
	(set-goal strategy usual)
	(set-goal milunits no); yes
	(set-goal attackprioritychange yes)
	(chat-to-player my-player-number text-stop-slinging)
	;(chat-to-allies text-stop-slinging)
;	(chat-to-player-using-id every-ally 22073); "Go forth and thrash our opponents!"
	(acknowledge-taunt every-ally 58))
(defrule
	(goal strategy sling)
(or	(players-population any-ally >= max-civ-pop); del ; every
(or	(up-allied-resource-amount any-ally wood >= 2000)
(or	(up-allied-resource-amount any-ally food >= 2000)
(or	(up-allied-resource-amount any-ally gold >= 2000)
	(up-allied-resource-amount any-ally stone >= 801))))); 775
=>
	(set-goal strategy usual)
	(set-goal milunits no); yes
	(set-goal attackprioritychange yes)
	(chat-to-player my-player-number text-stop-slinging)
	;(chat-to-allies text-stop-slinging)
;	(chat-to-player-using-id every-ally 22073); "Go forth and thrash our opponents!"
	(acknowledge-taunt every-ally 58))
(defrule
	(goal strategy sling)
	(population >= min-number-vills)
(or	(population >= max-civ-pop)
(or	(civilian-population >= up-max-civ)
(or	(civilian-population >= 64); 75
	(strategic-number sn-current-age >= imperial))))
=>
	(set-goal strategy usual)
	(set-goal milunits no); yes
	(set-goal attackprioritychange yes)
	(chat-to-player my-player-number text-stop-slinging)
	;(chat-to-allies text-stop-slinging)
;	(chat-to-player-using-id every-ally 22073); "Go forth and thrash our opponents!"
	(acknowledge-taunt every-ally 58))
(defrule
	(goal strategy sling)
(or	(up-compare-goal gl-treaty-time >= 1)
(or	(up-compare-const inf-game == yes)
(or	(goal underattack yes); hm
	(not	(player-in-game every-ally))))); for now; at least any-ally
=>
	(set-goal strategy usual)
	(set-goal milunits no); yes
	(set-goal attackprioritychange yes)
	(chat-to-player my-player-number text-stop-slinging)
	;(chat-to-allies text-stop-slinging)
;	(chat-to-player-using-id every-ally 22073); "Go forth and thrash our opponents!"
	(acknowledge-taunt every-ally 58))
(defrule
	(goal strategy sling)
	(game-time >= 900)
	(up-compare-const diff-id <= 2)
	(population >= 25)
	(players-population every-ally <= 10)
=>
	(set-goal strategy usual)
	(set-goal milunits no); yes
	(set-goal attackprioritychange yes)
	(chat-to-player my-player-number text-stop-slinging)
	;(chat-to-allies text-stop-slinging)
;	(chat-to-player-using-id every-ally 22074); "41 Whoa, I'll not feed such puny allies! 'Tis every man for himself!"
	(acknowledge-taunt every-ally 58))
(defrule
	(taunt-detected any-ally 59)
=>
	(set-goal strategy usual)
	(set-goal milunits no); yes
	(set-goal attackprioritychange yes)
	(chat-to-player my-player-number text-stop-slinging)
	;(chat-to-allies text-stop-slinging)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(chat-to-player-using-id every-ally 22073); "Go forth and thrash our opponents!"
	(acknowledge-taunt every-ally 58)
	(acknowledge-taunt every-ally 59))
(defrule
	(taunt-detected any-ally 60)
	(goal strategy sling)
=>
	(set-goal strategy usual)
	(set-goal milunits no); yes
	(set-goal attackprioritychange yes))
(defrule
	(taunt-detected any-ally 60)
=>
	;(chat-to-player this-any-ally "58"); every-
	;(chat-to-player every-ally "1I will be relying on your help.")
	(chat-to-player-using-id every-ally 22114); "Thanks! It will be wisely spent."
	(chat-local-to-self "I am shot.")
	(acknowledge-taunt every-ally 60)
	(set-goal control-goal 7))
(defrule
	(goal control-goal 7)
(or	(up-timer-status resign-timer != timer-disabled)
(or	(and	(population < 24)
		(game-time >= 900))
	(and	(strategic-number sn-current-age >= imperial)
		(population >= max-civ-pop)))); del
=>
	;(chat-to-allies "97Stop slinging me now.")
	(chat-to-player-using-id every-ally 11458); "Stop sending me extra resources."
	(set-goal control-goal 0))
(defrule
(or	(taunt-detected any-ally 58)
	(taunt-detected my-player-number 58))
	(up-compare-goal strategy != sling)
=>
	(chat-to-player my-player-number text-decline-ask-next-game); "2I decline, ask me next game."
	;(chat-to-allies text-decline-ask-next-game); "2I decline, ask me next game."
	(chat-to-player-using-id every-ally 22118); "Alas, I cannot help that at this time."
	(acknowledge-taunt my-player-number 58)
	(acknowledge-taunt every-ally 58))
(defrule
(or	(taunt-detected any-ally 58)
	(taunt-detected my-player-number 58))
	(up-compare-goal gl-random-number < 67)
	(goal strategy sling)
=>
	(chat-to-player-using-id every-ally 22072); "39 I shall tribute to thee as many resources as I can muster."
	(chat-to-player-using-id every-ally 22073); "Go forth and thrash our opponents!"
	(acknowledge-taunt my-player-number 58)
	(acknowledge-taunt every-ally 58))
(defrule
(or	(taunt-detected any-ally 58)
	(taunt-detected my-player-number 58))
	(goal strategy sling)
=>
	(chat-to-player-using-id every-ally 11459); "Prepare to train a large army, I will send you as many resources as I can spare."
	(chat-to-player-using-id every-ally 22073); "Go forth and thrash our opponents!"
	(acknowledge-taunt my-player-number 58)
	(acknowledge-taunt every-ally 58))


(defrule
	(up-compare-goal sling-player != -1)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(up-modify-sn sn-focus-player-number g:= sling-player)
	(up-get-fact player-in-game focus-player temporary-goal2)
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
	(set-goal temporary-goal3 1943583))
(defrule
(and	(goal temporary-goal4 1943583)
	(goal temporary-goal2 1))
	(player-in-game every-ally); for now
=>
	(up-jump-rule 1))
(defrule
	(player-in-game any-ally)
=>
	(up-get-player-fact this-any-ally player-number 0 sling-player)); end jump
(defrule
	(taunt-detected any-ally 58)
=>
	(up-get-player-fact this-any-ally player-number 0 sling-player))




(defrule
(or	(taunt-detected my-player-number 36)
	(taunt-detected any-ally 36))
	(up-compare-goal strategy != usual)
=>
	(acknowledge-taunt my-player-number 36)
	(acknowledge-taunt every-ally 36)
	(set-goal milunits yes)
	(set-goal strategy usual)
	(set-goal attackprioritychange yes)
	(set-goal strategylocked no);
	;(chat-to-allies text-understood)
	;(chat-to-allies text-reset-strategy)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
)
(defrule
(or	(taunt-detected my-player-number 34)
	(taunt-detected any-ally 34))
(or	(goal inseln yes)
	(building-type-count dock >= 6))
	(goal fleet yes)
	(goal map water)
=>
	(chat-to-player-using-id every-ally 22159); "39 Er ... sire. I had planned as much!"
	(acknowledge-taunt my-player-number 34)
	(acknowledge-taunt every-ally 34)
	(disable-self))
(defrule
	(game-time < 300)
=>
	(up-jump-rule 1))
(defrule
	(taunt-detected any-ally 34)
	(goal map land)
	(building-type-count-total dock <= 0)
	(players-building-type-count every-ally dock <= 0)
	(players-building-type-count every-enemy dock <= 0)
	(goal enemy-boats no)
	(players-unit-type-count every-enemy fishing-ship <= 0)
	(up-compare-goal biggestenemynavy <= 0)
	(cc-players-unit-type-count 0 shore-fish-class <= 0)
	(cc-players-unit-type-count 0 ocean-fish-class <= 0)
	(goal inseln no)
	(up-compare-goal navycount <= 0)
	(goal fleet yes)
	(strategic-number sn-minimum-water-body-size-for-dock <= 1500)
=>
	(chat-to-player-using-id every-ally 22158); "39 But sire, this map is dry as a bone! Surely thou jesteth?"
	(acknowledge-taunt every-ally 34)); end jump
(defrule
(or	(taunt-detected my-player-number 34)
	(taunt-detected any-ally 34))
	(up-compare-goal strategy-type2 != water)
	(goal map water)
;	(goal fleet yes)
;;	(goal fishing yes)
	(strategic-number sn-current-age <= castlea)
=>
	(set-goal strategy-type2 water)
	(set-goal milunits grush)
	(set-goal strategy grush)
	(set-goal attackprioritychange yes)
	(set-goal fleet yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-grush)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt my-player-number 34)
	(acknowledge-taunt every-ally 34)
	(disable-self)); hm
(defrule
(or	(taunt-detected my-player-number 34)
	(taunt-detected any-ally 34))
	(building-type-count-total dock <= 0)
=>
	(up-modify-sn sn-minimum-water-body-size-for-dock c:min 1200)
	(set-goal map water)
	(set-goal fleet yes)
	;(chat-to-allies text-start-creating-fleet)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt my-player-number 34)
	(acknowledge-taunt every-ally 34))
(defrule
(or	(taunt-detected my-player-number 34)
	(taunt-detected any-ally 34))
=>
	(set-goal map water)
	(set-goal fleet yes)
	;(chat-to-allies text-start-creating-fleet)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt my-player-number 34)
	(acknowledge-taunt every-ally 34))

(defrule
(or	(taunt-detected my-player-number 35)
	(taunt-detected any-ally 35))
	(up-compare-goal strategy-type2 == water)
=>
	(set-goal milunits yes)
;	(set-goal attacking no)
	(set-goal strategy usual)
	(set-goal attackprioritychange yes)
	(set-goal map land);
	(set-goal fleet no);
	;(chat-to-allies text-reset-strategy)
	;(chat-to-allies text-stop-creating-fleet)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt my-player-number 35)
	(acknowledge-taunt every-ally 35)
)
(defrule
(or	(taunt-detected my-player-number 35)
	(taunt-detected any-ally 35))
	(goal fleet yes)
=>
	(set-goal map land)
	(set-goal fleet no)
	;(chat-to-allies text-stop-creating-fleet)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt my-player-number 35)
	(acknowledge-taunt every-ally 35))
(defrule
	(taunt-detected any-human-ally 70)
	(population >= max-civ-pop)
	(up-compare-goal custom-civ-pop > up-max-civ)
	(unit-type-count villager >= 4)
=>
	(delete-unit fishing-ship)
	(delete-unit villager))
(defrule
	(taunt-detected any-human-ally 70)
	(population >= max-civ-pop)
(or	(up-compare-goal tradeunits > maxcartspop)
	(up-compare-goal tradeunits > maxcartssize))
=>
	(delete-unit trade-cog)
	(delete-unit trade-cart))
(defrule
	(taunt-detected any-human-ally 70)
=>
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 70))
(defrule
	(taunt-detected any-human-ally 71)
=>
	(delete-unit demolition-ship)
	(delete-unit heavy-demolition-ship)
	(delete-unit fire-ship)
	(delete-unit fast-fire-ship)
	(delete-unit galley)
	(delete-unit war-galley)
	(delete-unit galleon)
	(delete-unit longboat)
	(delete-unit elite-longboat)
	(delete-unit turtle-ship)
	(delete-unit elite-turtle-ship)
	(delete-unit caravel)
	(delete-unit elite-caravel)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 71))

(defrule
(or	(taunt-detected my-player-number 32)
	(taunt-detected any-ally 32))
	(goal milunits no)
	(up-compare-goal strategy != stonewall)
=>
	(acknowledge-taunt my-player-number 32)
	(acknowledge-taunt every-ally 32)
	(set-goal milunits yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-stop-boom)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
)


(defrule
(or	(taunt-detected my-player-number 33)
	(taunt-detected any-ally 33))
	(up-compare-goal strategy == sling)
=>
	(acknowledge-taunt my-player-number 58)
	(acknowledge-taunt every-ally 58)
	(set-goal strategy usual)
	(set-goal milunits no); yes
	(set-goal attackprioritychange yes)
	(set-goal strategylocked no))
(defrule
(or	(taunt-detected my-player-number 33)
	(taunt-detected any-ally 33))
;	(up-compare-goal position-goal != flank)
	(strategic-number sn-current-age < imperial)
=>
	(acknowledge-taunt my-player-number 33)
	(acknowledge-taunt this-any-ally 33)
	(set-goal strategy usual)
	(set-goal milunits no)
	(set-goal strategylocked yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-boom)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
)

(defrule
(or	(taunt-detected any-ally 32)
(or	(taunt-detected any-ally 33)
(or	(taunt-detected any-ally 34)
	(taunt-detected any-ally 35))))
=>
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt this-any-ally 32)
	(acknowledge-taunt this-any-ally 33)
	(acknowledge-taunt this-any-ally 34)
	(acknowledge-taunt this-any-ally 35))


(defrule
(or	(taunt-detected any-human-ally 31)
	(taunt-detected any-human-ally 51))
=>
	(up-get-player-fact this-any-human-ally player-number 0 temporary-goal))
(defrule
(or	(taunt-detected any-human-ally 31)
	(taunt-detected any-human-ally 51))
;(or
	(up-compare-goal my-flank g:== temporary-goal)
;	(up-compare-goal my-flank2 g:== temporary-goal))
	(up-compare-goal temporary-goal >= 1)
	(up-compare-goal temporary-goal <= 8)
=>
	(set-goal temporary-goal 2932929))
(defrule
	(goal temporary-goal 2932929)
	(goal attacking no)
=>
	;(chat-to-player every-ally text-attacking-prepare); "I will be more likely to attack in the next 4 minutes."
	(chat-local-to-self text-attacking-prepare); "I will be more likely to attack in the next 4 minutes."
	(up-get-timer c: assistance-timer temporary-goal)
	(up-modify-goal temporary-goal c:max 0)
	(up-modify-goal temporary-goal c:/ 1000)
	(up-get-fact game-time 0 temporary-goal2)
	(up-modify-goal temporary-goal g:- temporary-goal2)
;	(up-chat-data-to-all "assistance-timer: %d" g: temporary-goal)
	(up-modify-goal temporary-goal c:max 240)
	(up-set-timer c: assistance-timer g: temporary-goal)
); 210; 240

(defrule
	(timer-triggered assistance-timer)
=>
	(disable-timer assistance-timer))

(defrule
	(up-timer-status assistance-timer == timer-running)
=>
	(set-goal assistance yes)
	(up-jump-rule 4))
(defrule
	(true)
=>
	(set-goal assistance no)
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 1))
(defrule
	(player-in-game focus-player); valid
	(stance-toward focus-player ally)
	(strategic-number sn-focus-player-number != my-player-number)
	(up-allied-sn focus-player sn-target-player-number s:== sn-target-player-number)
	(up-allied-goal focus-player attacknotifier == 1); attacking
	(strategic-number sn-target-player-number >= 1)
	(strategic-number sn-target-player-number <= 8)
=>
	(set-goal assistance yes))
(defrule
	(up-compare-goal assistance != yes)
	(strategic-number sn-focus-player-number < 8)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -2))
(defrule
	(true)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal)); end jump


(defrule
(or	(taunt-detected any-ally 48)
	(taunt-detected any-ally 51))
(or	(goal attacking yes)
	(goal patrolhelp yes))
=>
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 48)
	(acknowledge-taunt every-ally 51))
(defrule
(or	(taunt-detected any-ally 48)
	(taunt-detected any-ally 51))
=>
	(chat-to-player-using-id every-ally 22118); "Alas, I cannot help that at this time."
	(acknowledge-taunt every-ally 48)
	(acknowledge-taunt every-ally 51))

(defrule
	(taunt-detected any-human-ally 72)
(or	(goal maa-var yes)
(or	(goal champgoal yes)
(or	(and	(goal strategy castledrop)
		(up-compare-const uu-type == infantry-uu))
	(goal strategy stonewall))))
=>
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 72)
	(up-jump-rule 1))
#load-if-not-defined UP-POCKET-POSITION
(defrule
	(taunt-detected any-human-ally 72)
	(up-compare-const maa-var-affinity >= 1)
=>
	(set-goal maa-var yes)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 72))
#else
(defrule
	(taunt-detected any-human-ally 72)
	(up-compare-const stonewall-affinity >= 1)
=>
	(set-goal strategy stonewall)
	(set-goal milunits no)
	(set-goal attackprioritychange yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-eew)
;	(set-goal strategylocked yes)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 72))
#end-if; end jump
(defrule
	(taunt-detected any-human-ally 73)
(or	(goal palagoal yes)
(or	(and	(goal strategy castledrop)
		(up-compare-const uu-type == cavalry-uu))
(or	(goal strategy s-flush)
	(goal strategy krush))))
=>
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 73)
	(up-jump-rule 1))
#load-if-not-defined UP-POCKET-POSITION
(defrule
	(taunt-detected any-human-ally 73)
	(strategic-number sn-current-age >= fcastlea)
	(up-compare-const krush-affinity >= 1)
=>
	(set-goal kr-var 2)
	(set-goal strategy krush)
	(set-goal milunits krush)
	(set-goal attackprioritychange yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-krush)
	;(chat-to-allies text-krush-stables2)
;	(set-goal strategylocked yes)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 73))
#else
(defrule
	(taunt-detected any-human-ally 73)
	(up-compare-const krush-affinity >= 1)
=>
	(set-goal kr-var 2); 1
	(set-goal strategy krush)
	(set-goal milunits krush)
	(set-goal attackprioritychange yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-krush)
	;(chat-to-allies text-krush-stables2); 1
;	(set-goal strategylocked yes)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 73))
#end-if; end jump
(defrule
	(taunt-detected any-human-ally 74)
(or	(and	(goal strategy castledrop)
		(or	(up-compare-const uu-type == archer-uu)
			(up-compare-const uu-type == powder-uu)))
(or	(goal strategy r-flush)
(or	(goal strategy a-rush)
	(goal strategy ca-rush))))
=>
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 74)
	(up-jump-rule 1))
#load-if-not-defined UP-POCKET-POSITION
(defrule
	(taunt-detected any-human-ally 74)
	(up-compare-const r-flush-affinity >= 1)
=>
	(set-goal strategy r-flush)
	(set-goal milunits r-flush)
	(set-goal sk-var yes)
	(set-goal attackprioritychange yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-r-sk)
;	(set-goal strategylocked yes)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 74))
#else
(defrule
	(taunt-detected any-human-ally 74)
	(up-compare-const a-rush-affinity >= 1)
=>
	(set-goal strategy a-rush)
	(set-goal milunits a-rush)
	(set-goal attackprioritychange yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-a-rush)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
;	(set-goal strategylocked yes)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 74))
#end-if; end jump
(defrule
	(taunt-detected any-human-ally 75)
	(up-compare-goal strategy-type2 == water)
=>
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 75)
	(up-jump-rule 1))
#load-if-not-defined UP-POCKET-POSITION
(defrule
	(taunt-detected any-human-ally 75)
	(up-compare-const grush-affinity >= 1)
=>
	(set-goal strategy-type2 water)
	(set-goal milunits grush)
	(set-goal strategy grush)
	(set-goal attackprioritychange yes)
	(set-goal fleet yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-grush)
;	(set-goal strategylocked yes)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 75))
#else
(defrule
	(taunt-detected any-human-ally 75)
	(up-compare-const grush-affinity >= 1)
=>
	(set-goal strategy-type2 water)
	(set-goal milunits grush)
	(set-goal strategy grush)
	(set-goal attackprioritychange yes)
	(set-goal fleet yes)
	;(chat-to-allies text-understood)
	;(chat-to-allies text-attempt-grush)
;	(set-goal strategylocked yes)
	(chat-to-player-using-id every-ally 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 75))
#end-if; end jump

(defrule
(or	(taunt-detected any-ally 72)
(or	(taunt-detected any-ally 73)
(or	(taunt-detected any-ally 74)
	(taunt-detected any-ally 75))))
=>
	(chat-to-player-using-id every-ally 22118); "Alas, I cannot help that at this time."
	(acknowledge-taunt every-ally 72)
	(acknowledge-taunt every-ally 73)
	(acknowledge-taunt every-ally 74)
	(acknowledge-taunt every-ally 75))







(defrule
;	(up-compare-goal gl-threat-time < 16000)
(or	(strategic-number sn-military-superiority <= -1)
	(up-enemy-units-in-town g:> my-mpop))
	(goal underattack yes)
	(goal defendchat yes)
=>
	(up-full-reset-search)
	(up-modify-goal temporary-goal2 s:= sn-maximum-town-size)
	(up-modify-goal temporary-goal2 c:max 32)
	(up-modify-goal temporary-goal2 c:+ 8)
	(up-set-target-point position-self-x)
	(up-filter-distance c: -1 g: temporary-goal2)
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(up-modify-sn sn-focus-player-number g:= attacking-enemy)
	(up-find-remote c: all-units-class c: 40)
	(up-clean-search search-remote object-data-distance search-order-asc)
	(up-modify-sn sn-focus-player-number g:= temporary-goal))
(defrule
	(up-set-target-object search-remote c: 0)
;	(up-compare-goal gl-threat-time < 16000)
(or	(strategic-number sn-military-superiority <= -1)
	(up-enemy-units-in-town g:> my-mpop))
	(goal underattack yes)
	(goal defendchat yes)
=>
	(up-get-point position-object temporary-point-x)
	(up-send-flare temporary-point-x))
(defrule
(or	(strategic-number sn-military-superiority <= -1)
	(up-enemy-units-in-town g:> my-mpop))
	(goal underattack yes)
	(goal defendchat yes)
=>
;	(chat-to-player every-ally text-31);	;(chat-to-allies text-31)
	;(chat-to-player every-ally text-222help);	;(chat-to-allies text-222help)
	(chat-to-player-using-id every-ally 22115); "39 Help! The enemy is in my town!"
;	(chat-to-player my-player-number text-222); test
;	(acknowledge-taunt my-player-number 222)
	(set-goal defendchat no)
	(enable-timer defend-timer 150)); 120
(defrule
	(timer-triggered defend-timer)
=>
	(disable-timer defend-timer)
	(set-goal defendchat yes))




(defrule
	(goal attackStart yes)
=>
	(enable-timer attack-chat 0))
(defrule
(or	(taunt-detected my-player-number 31)
(or	(taunt-detected any-ally 31)
(or	(taunt-detected my-player-number 222)
	(taunt-detected any-computer-ally 222))))
	(goal attacking no)
=>
	(acknowledge-taunt my-player-number 31)
	(acknowledge-taunt every-ally 31)
	(acknowledge-taunt my-player-number 222)
	(acknowledge-taunt this-any-computer-ally 222)
	;(chat-to-allies text-attacking-not-ready)
	(chat-to-player-using-id every-ally 22118)); "Alas, I cannot help that at this time."
(defrule
(or	(taunt-detected my-player-number 31)
(or	(taunt-detected any-ally 31)
(or	(taunt-detected my-player-number 222)
	(taunt-detected any-computer-ally 222))))
	(goal attacking yes)
=>
	(acknowledge-taunt my-player-number 31)
	(acknowledge-taunt every-ally 31)
	(acknowledge-taunt my-player-number 222)
	(acknowledge-taunt this-any-computer-ally 222)
	(up-store-player-name target-player)
	(up-chat-data-to-player-using-id every-ally 2313 c: 7031232); "I am preparing to attack %s, please join me."
	(up-chat-data-to-player-using-id my-player-number 2313 c: 7031232); "I am preparing to attack %s, please join me."
	(enable-timer attack-chat 240))
(defrule
	(player-in-game any-ally)
	(timer-triggered attack-chat)
	(goal attacking yes)
=>
	(up-store-player-name target-player)
	(up-chat-data-to-player-using-id every-ally 2313 c: 7031232); "I am preparing to attack %s, please join me."
	(up-chat-data-to-player-using-id my-player-number 2313 c: 7031232); "I am preparing to attack %s, please join me."
;	(chat-to-player-using-id every-ally 22117); "Attack now!"
	(enable-timer attack-chat 240))


(defrule
(nor	(taunt-detected any-human-ally 61)
(or	(taunt-detected any-human-ally 62)
(or	(taunt-detected any-human-ally 63)
(or	(taunt-detected any-human-ally 64)
(or	(taunt-detected any-human-ally 65)
(or	(taunt-detected any-human-ally 66)
(or	(taunt-detected any-human-ally 67)
	(taunt-detected any-human-ally 68))))))))
=>
	(up-jump-rule 8))
(defrule
	(taunt-detected any-human-ally 61)
(nor	(stance-toward 1 ally)
	(player-number 1))
	(player-in-game 1)
	(players-building-count 1 >= 1); eligible for targeting
=>
	(set-strategic-number sn-target-player-number 1)
	(set-strategic-number sn-focus-player-number 1)
	(set-goal retargetenemy 5); block retargeting
	;(chat-to-allies text-targetting-this-enemy-10)
	;(chat-to-allies text-if-i-dont-kill-him-faster)
	(chat-to-player-using-id every-ally 22026); "It shall be war to the knife!"
	(enable-timer human-coop-timer 600)
	(acknowledge-taunt every-ally 61))
(defrule
	(taunt-detected any-human-ally 62)
(nor	(stance-toward 2 ally)
	(player-number 2))
	(player-in-game 2)
	(players-building-count 2 >= 1); eligible for targeting
=>
	(set-strategic-number sn-target-player-number 2)
	(set-strategic-number sn-focus-player-number 2)
	(set-goal retargetenemy 5); block retargeting
	;(chat-to-allies text-targetting-this-enemy-10)
	;(chat-to-allies text-if-i-dont-kill-him-faster)
	(chat-to-player-using-id every-ally 22026); "It shall be war to the knife!"
	(enable-timer human-coop-timer 600)
	(acknowledge-taunt every-ally 62))
(defrule
	(taunt-detected any-human-ally 63)
(nor	(stance-toward 3 ally)
	(player-number 3))
	(player-in-game 3)
	(players-building-count 3 >= 1); eligible for targeting
=>
	(set-strategic-number sn-target-player-number 3)
	(set-strategic-number sn-focus-player-number 3)
	(set-goal retargetenemy 5); block retargeting
	;(chat-to-allies text-targetting-this-enemy-10)
	;(chat-to-allies text-if-i-dont-kill-him-faster)
	(chat-to-player-using-id every-ally 22026); "It shall be war to the knife!"
	(enable-timer human-coop-timer 600)
	(acknowledge-taunt every-ally 63))
(defrule
	(taunt-detected any-human-ally 64)
(nor	(stance-toward 4 ally)
	(player-number 4))
	(player-in-game 4)
	(players-building-count 4 >= 1); eligible for targeting
=>
	(set-strategic-number sn-target-player-number 4)
	(set-strategic-number sn-focus-player-number 4)
	(set-goal retargetenemy 5); block retargeting
	;(chat-to-allies text-targetting-this-enemy-10)
	;(chat-to-allies text-if-i-dont-kill-him-faster)
	(chat-to-player-using-id every-ally 22026); "It shall be war to the knife!"
	(enable-timer human-coop-timer 600)
	(acknowledge-taunt every-ally 64))
(defrule
	(taunt-detected any-human-ally 65)
(nor	(stance-toward 5 ally)
	(player-number 5))
	(player-in-game 5)
	(players-building-count 5 >= 1); eligible for targeting
=>
	(set-strategic-number sn-target-player-number 5)
	(set-strategic-number sn-focus-player-number 5)
	(set-goal retargetenemy 5); block retargeting
	;(chat-to-allies text-targetting-this-enemy-10)
	;(chat-to-allies text-if-i-dont-kill-him-faster)
	(chat-to-player-using-id every-ally 22026); "It shall be war to the knife!"
	(enable-timer human-coop-timer 600)
	(acknowledge-taunt every-ally 65))
(defrule
	(taunt-detected any-human-ally 66)
(nor	(stance-toward 6 ally)
	(player-number 6))
	(player-in-game 6)
	(players-building-count 6 >= 1); eligible for targeting
=>
	(set-strategic-number sn-target-player-number 6)
	(set-strategic-number sn-focus-player-number 6)
	(set-goal retargetenemy 5); block retargeting
	;(chat-to-allies text-targetting-this-enemy-10)
	;(chat-to-allies text-if-i-dont-kill-him-faster)
	(chat-to-player-using-id every-ally 22026); "It shall be war to the knife!"
	(enable-timer human-coop-timer 600)
	(acknowledge-taunt every-ally 66))
(defrule
	(taunt-detected any-human-ally 67)
(nor	(stance-toward 7 ally)
	(player-number 7))
	(player-in-game 7)
	(players-building-count 7 >= 1); eligible for targeting
=>
	(set-strategic-number sn-target-player-number 7)
	(set-strategic-number sn-focus-player-number 7)
	(set-goal retargetenemy 5); block retargeting
	;(chat-to-allies text-targetting-this-enemy-10)
	;(chat-to-allies text-if-i-dont-kill-him-faster)
	(chat-to-player-using-id every-ally 22026); "It shall be war to the knife!"
	(enable-timer human-coop-timer 600)
	(acknowledge-taunt every-ally 67))
(defrule
	(taunt-detected any-human-ally 68)
(nor	(stance-toward 8 ally)
	(player-number 8))
	(player-in-game 8)
	(players-building-count 8 >= 1); eligible for targeting
=>
	(set-strategic-number sn-target-player-number 8)
	(set-strategic-number sn-focus-player-number 8)
	(set-goal retargetenemy 5); block retargeting
	;(chat-to-allies text-targetting-this-enemy-10)
	;(chat-to-allies text-if-i-dont-kill-him-faster)
	(chat-to-player-using-id every-ally 22026); "It shall be war to the knife!"
	(enable-timer human-coop-timer 600)
	(acknowledge-taunt every-ally 68)); end jump


(defrule
	(timer-triggered human-coop-timer)
=>
	(disable-timer human-coop-timer)
	;(chat-to-allies text-select-target-myself)
	(set-goal retargetenemy yes)); allow retargeting



(defrule
	(up-compare-goal gl-treaty-time >= 1)
(or	(taunt-detected any-ally 3)
(or	(taunt-detected any-ally 4)
(or	(taunt-detected any-ally 5)
(or	(taunt-detected any-ally 6)
	(taunt-detected any-ally 38)))))
=>
	(chat-to-player-using-id every-ally 22118)); "Alas, I cannot help that at this time."
;(defrule
;	(up-compare-goal escrowing != no)
;(or	(taunt-detected any-ally 3)
;(or	(taunt-detected any-ally 4)
;(or	(taunt-detected any-ally 5)
;	(taunt-detected any-ally 6))))
;=>
;	;(chat-to-allies text-sorry-no-resources)
;	(chat-to-player-using-id every-ally 22163); "39 I regret, sire, that I have nothing to spare."
;;	(chat-to-player-using-id every-ally 22118); "Alas, I cannot help that at this time."
;	(acknowledge-taunt every-ally 3)
;	(acknowledge-taunt every-ally 4)
;	(acknowledge-taunt every-ally 5)
;	(acknowledge-taunt every-ally 6)
;	(up-jump-rule 12))
(defrule
(nor	(building-type-count town-center >= 1)
(or	(taunt-detected any-ally 3)
(or	(taunt-detected any-ally 4)
(or	(taunt-detected any-ally 5)
	(taunt-detected any-ally 6)))))
=>
	(up-jump-rule 11))
(defrule
	(building-type-count market <= 0)
(or	(taunt-detected any-ally 3)
(or	(taunt-detected any-ally 4)
(or	(taunt-detected any-ally 5)
	(taunt-detected any-ally 6))))
=>
	;(chat-to-allies text-sorry-no-market)
	(chat-to-player-using-id this-any-ally 22164); "39 But sire! I have no market!"
	(acknowledge-taunt every-ally 3)
	(acknowledge-taunt every-ally 4)
	(acknowledge-taunt every-ally 5)
	(acknowledge-taunt every-ally 6)
	(up-jump-rule 10))
(defrule
	(up-compare-goal excessFood >= 5000)
	(research-completed ri-banking)
;tl	(strategic-number sn-current-age >= imperial)
	(taunt-detected any-ally 3)
=>
	(tribute-to-player this-any-ally food 1000)
	(acknowledge-taunt this-any-ally 3)
	;(chat-to-player this-any-ally text-here-is-food)
	(chat-to-player-using-id this-any-ally 22077); "39 Here is some food!"
	(chat-local-to-self text-tributing-1000food)
	(up-jump-rule -1))
(defrule
	(up-compare-goal excessWood >= 5000)
	(research-completed ri-banking)
;tl	(strategic-number sn-current-age >= imperial)
	(taunt-detected any-ally 4)
=>
	(tribute-to-player this-any-ally wood 1000)
	(acknowledge-taunt this-any-ally 4)
	;(chat-to-player this-any-ally text-here-is-wood)
	(chat-to-player-using-id this-any-ally 22076); "39 Here is some wood!"
	(chat-local-to-self text-tributing-1000wood)
	(up-jump-rule -1))
(defrule
	(up-compare-goal excessGold >= 5000)
	(research-completed ri-banking)
;tl	(strategic-number sn-current-age >= imperial)
	(taunt-detected any-ally 5)
=>
	(tribute-to-player this-any-ally gold 1000)
	(acknowledge-taunt this-any-ally 5)
	;(chat-to-player this-any-ally text-here-is-gold)
	(chat-to-player-using-id this-any-ally 22078); "39 Here is some gold!"
	(chat-local-to-self text-tributing-1000gold)
	(up-jump-rule -1))
(defrule
	(up-compare-goal excessFood >= 1400)
(or	(research-completed ri-banking)
	(and	(research-completed ri-coinage)
		(up-compare-goal excessFood >= 1800)))
;tl	(strategic-number sn-current-age >= imperial)
	(taunt-detected any-ally 3)
=>
	(tribute-to-player this-any-ally food 400)
	(acknowledge-taunt this-any-ally 3)
	;(chat-to-player this-any-ally text-here-is-food)
	(chat-to-player-using-id this-any-ally 22077); "39 Here is some food!"
	(chat-local-to-self text-tributing-400food)
	(up-jump-rule -1))
(defrule
(or	(up-compare-goal excessWood >= 1400)
	(and	(players-building-type-count any-ally town-center <= 0)
		(up-compare-goal excessWood >= 300))); 500
(or	(research-completed ri-banking)
	(and	(research-completed ri-coinage)
		(up-compare-goal excessWood >= 1800)))
;tl	(strategic-number sn-current-age >= imperial)
	(taunt-detected any-ally 4)
=>
	(tribute-to-player this-any-ally wood 400)
	(acknowledge-taunt this-any-ally 4)
	;(chat-to-player this-any-ally text-here-is-wood)
	(chat-to-player-using-id this-any-ally 22076); "39 Here is some wood!"
	(chat-local-to-self text-tributing-400wood)
	(up-jump-rule -1))
(defrule
(or	(up-compare-goal excessGold >= 1800)
	(and	(goal researchplan yes)
		(up-compare-goal excessGold >= 1400)))
(or	(research-completed ri-banking)
	(and	(research-completed ri-coinage)
		(up-compare-goal excessGold >= 1800)))
;tl	(strategic-number sn-current-age >= imperial)
	(taunt-detected any-ally 5)
=>
	(tribute-to-player this-any-ally gold 400)
	(acknowledge-taunt this-any-ally 5)
	;(chat-to-player this-any-ally text-here-is-gold)
	(chat-to-player-using-id this-any-ally 22078); "39 Here is some gold!"
	(chat-local-to-self text-tributing-400gold)
	(up-jump-rule -1))
(defrule
(or	(up-compare-goal excessFood >= 1100)
(or	(research-completed ri-coinage)
	(strategic-number sn-current-age >= imperial)))
	(up-compare-goal excessFood >= 400)
	(taunt-detected any-ally 3)
=>
	(tribute-to-player this-any-ally food 100)
	(acknowledge-taunt this-any-ally 3)
	;(chat-to-player this-any-ally text-here-is-food)
	(chat-to-player-using-id this-any-ally 22077); "39 Here is some food!"
	(chat-local-to-self text-tributing-100food)
	(up-jump-rule -1))
(defrule
(or	(up-compare-goal excessWood >= 550)
(or	(players-building-type-count any-ally town-center <= 0)
(or	(research-completed ri-coinage)
	(and	(up-compare-goal excessWood >= 400)
		(strategic-number sn-current-age >= imperial)))))
	(taunt-detected any-ally 4)
=>
	(tribute-to-player this-any-ally wood 100)
	(acknowledge-taunt this-any-ally 4)
	;(chat-to-player this-any-ally text-here-is-wood)
	(chat-to-player-using-id this-any-ally 22076); "39 Here is some wood!"
	(chat-local-to-self text-tributing-100wood)
	(up-jump-rule -1))
(defrule
(or	(up-compare-goal excessGold >= 800)
	(and	(goal researchplan yes)
		(up-compare-goal excessGold >= 400)))
(or	(research-completed ri-banking)
	(up-compare-goal excessGold >= 1100))
	(taunt-detected any-ally 5)
=>
	(tribute-to-player this-any-ally gold 100)
	(acknowledge-taunt this-any-ally 5)
	;(chat-to-player this-any-ally text-here-is-gold)
	(chat-to-player-using-id this-any-ally 22078); "39 Here is some gold!"
	(chat-local-to-self text-tributing-100gold)
	(up-jump-rule -1))
(defrule
(or	(up-compare-goal excessStone >= 1100)
(or	(research-completed ri-coinage)
	(strategic-number sn-current-age >= imperial)))
(or	(up-compare-goal excessStone >= 750)
(or	(building-type-count-total castle >= 3)
	(players-building-type-count any-ally town-center <= 0)))
;	(up-compare-goal excessStone >= 225);
	(taunt-detected any-ally 6)
=>
	(tribute-to-player this-any-ally stone 100)
	(acknowledge-taunt this-any-ally 6)
	;(chat-to-player this-any-ally text-here-is-stone)
	(chat-to-player-using-id this-any-ally 22079); "39 Here is some stone!"
	(chat-local-to-self text-tributing-100stone)
	(up-jump-rule -1)); end jump



(defrule
(or	(up-compare-goal strategy != sling)
(or	(up-compare-goal sling-player <= 0)
(or	(up-compare-goal sling-player >= 9)
	(building-type-count market <= 0))))
=>
	(up-jump-rule 8))
(defrule
(or	(civilian-population >= 16)
(or	(can-afford-research ri-coinage)
	(can-afford-research ri-banking)))
(or	(up-research-status c: ri-coinage == research-available)
(or	(up-research-status c: ri-coinage == research-pending)
(or	(up-research-status c: ri-banking == research-available)
	(up-research-status c: ri-banking == research-pending))))
=>
	(up-jump-rule 7))
(defrule
	(true)
=>
	(up-modify-goal temporary-goal7 s:= sn-focus-player-number)
	(up-modify-sn sn-focus-player-number g:= sling-player)
	(up-modify-goal temporary-goal g:= excessWood)
	(up-modify-goal temporary-goal2 g:= excessFood)
	(up-modify-goal temporary-goal3 g:= excessGold)
	(up-modify-goal temporary-goal4 g:= excessStone)
	(up-modify-goal temporary-goal c:- 100)
	(up-modify-goal temporary-goal2 c:- 50)
	(up-modify-goal temporary-goal3 c:- 50)
	(up-modify-goal temporary-goal4 c:- 125)
	(up-modify-goal temporary-goal c:min 2000)
	(up-modify-goal temporary-goal2 c:min 2000)
	(up-modify-goal temporary-goal3 c:min 2000)
	(up-modify-goal temporary-goal4 c:min 2000)
	(up-get-fact resource-percent amount-tribute-inefficiency temporary-goal5))
(defrule
	(true)
=>
	(up-modify-goal temporary-goal5 c:* -1)
	(up-modify-goal temporary-goal5 c:+ 100)
	(up-modify-goal temporary-goal5 c:min 100)
	(up-modify-goal temporary-goal5 c:max 50)
	(up-modify-goal temporary-goal g:* temporary-goal5)
	(up-modify-goal temporary-goal2 g:* temporary-goal5)
	(up-modify-goal temporary-goal3 g:* temporary-goal5)
	(up-modify-goal temporary-goal4 g:* temporary-goal5)
	(up-modify-goal temporary-goal c:/ 100)
	(up-modify-goal temporary-goal2 c:/ 100)
	(up-modify-goal temporary-goal3 c:/ 100)
	(up-modify-goal temporary-goal4 c:/ 100))
(defrule
	(up-compare-goal temporary-goal >= 100)
=>
	(up-tribute-to-player focus-player wood g: temporary-goal)
;	(up-chat-data-to-all "tg: %d" g: temporary-goal)
	(chat-to-player-using-id focus-player 22076); "39 Here is some wood!"
	(chat-local-to-self text-tributing-1000wood))
(defrule
	(up-compare-goal temporary-goal2 >= 100)
=>
	(up-tribute-to-player focus-player food g: temporary-goal2)
	(chat-to-player-using-id focus-player 22077); "39 Here is some food!"
;	(up-chat-data-to-all "tg2: %d" g: temporary-goal2)
	(chat-local-to-self text-tributing-1000food))
(defrule
	(up-compare-goal temporary-goal3 >= 100)
=>
	(up-tribute-to-player focus-player gold g: temporary-goal3)
	(chat-to-player-using-id focus-player 22078); "39 Here is some gold!"
;	(up-chat-data-to-all "tg3: %d" g: temporary-goal3)
	(chat-local-to-self text-tributing-1000gold))
(defrule
	(up-compare-goal temporary-goal4 >= 100)
=>
	(up-tribute-to-player focus-player stone g: temporary-goal4)
	(chat-to-player-using-id focus-player 22079); "39 Here is some stone!"
;	(up-chat-data-to-all "tg4: %d" g: temporary-goal4)
	(chat-local-to-self text-tributing-1000stone))
(defrule
	(true)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal7)); end jump



(defrule
	(taunt-detected any-ally 38)
	(building-type-count market <= 0)
=>
	;(chat-to-allies text-sorry-no-market)
	(chat-to-player-using-id every-ally 22164);"39 But sire! I have no market!"
	(acknowledge-taunt every-ally 38))
(defrule
	(taunt-detected any-ally 38)
=>
	(up-modify-goal temporary-goal g:= excessWood)
	(up-modify-goal temporary-goal2 g:= excessFood)
	(up-modify-goal temporary-goal3 g:= excessGold)
	(up-modify-goal temporary-goal4 g:= excessStone)
	(up-modify-goal temporary-goal c:- 200)
	(up-modify-goal temporary-goal2 c:- 200)
	(up-modify-goal temporary-goal3 c:- 200)
	(up-modify-goal temporary-goal4 c:- 200)
	(up-modify-goal temporary-goal c:min 1000)
	(up-modify-goal temporary-goal2 c:min 1000)
	(up-modify-goal temporary-goal3 c:min 1000)
	(up-modify-goal temporary-goal4 c:min 1000)
	(set-goal temporary-goal5 0))
(defrule
	(taunt-detected any-ally 38)
	(research-available ri-coinage)
=>
	(up-modify-goal temporary-goal c:min 500)
	(up-modify-goal temporary-goal2 c:min 500)
	(up-modify-goal temporary-goal3 c:min 500)
	(up-modify-goal temporary-goal4 c:min 500))
(defrule
	(up-compare-goal temporary-goal >= 1)
	(taunt-detected any-ally 38)
=>
	(up-tribute-to-player this-any-ally wood g: temporary-goal)
	(chat-to-player-using-id this-any-ally 22076); "39 Here is some wood!"
	(chat-local-to-self text-tributing-1000wood)
	(set-goal temporary-goal5 1))
(defrule
	(up-compare-goal temporary-goal2 >= 1)
	(taunt-detected any-ally 38)
=>
	(up-tribute-to-player this-any-ally food g: temporary-goal2)
	(chat-to-player-using-id this-any-ally 22077); "39 Here is some food!"
	(chat-local-to-self text-tributing-1000food)
	(set-goal temporary-goal5 1))
(defrule
	(up-compare-goal temporary-goal3 >= 1)
	(taunt-detected any-ally 38)
=>
	(up-tribute-to-player this-any-ally gold g: temporary-goal3)
	(chat-to-player-using-id this-any-ally 22078); "39 Here is some gold!"
	(chat-local-to-self text-tributing-1000gold)
	(set-goal temporary-goal5 1))
(defrule
	(up-compare-goal temporary-goal4 >= 1)
	(taunt-detected any-ally 38)
=>
	(up-tribute-to-player this-any-ally stone g: temporary-goal4)
	(chat-to-player-using-id this-any-ally 22079); "39 Here is some stone!"
	(chat-local-to-self text-tributing-1000stone)
	(set-goal temporary-goal5 1))
(defrule
	(goal temporary-goal5 1)
	(taunt-detected any-ally 38)
=>
	(acknowledge-taunt every-ally 38))

(defrule
(or	(taunt-detected any-ally 3)
(or	(taunt-detected any-ally 4)
(or	(taunt-detected any-ally 5)
(or	(taunt-detected any-ally 6)
	(taunt-detected any-ally 38)))))
=>
	;(chat-to-allies text-sorry-no-resources)
	(chat-to-player-using-id this-any-ally 22163); "39 I regret, sire, that I have nothing to spare."
	(acknowledge-taunt every-ally 3)
	(acknowledge-taunt every-ally 4)
	(acknowledge-taunt every-ally 5)
	(acknowledge-taunt every-ally 6)
	(acknowledge-taunt every-ally 38)
	(up-jump-rule 4))
(defrule
	(taunt-detected any-ally 3)
=>
	;(chat-to-allies text-sorry-no-food)
	(acknowledge-taunt every-ally 3))
(defrule
	(taunt-detected any-ally 4)
=>
	;(chat-to-allies text-sorry-no-wood)
	(acknowledge-taunt every-ally 4))
(defrule
	(taunt-detected any-ally 5)
=>
	;(chat-to-allies text-sorry-no-gold)
	(acknowledge-taunt every-ally 5))
(defrule
	(taunt-detected any-ally 6)
=>
	;(chat-to-allies text-sorry-no-stone)
	(acknowledge-taunt every-ally 6)); end jump


(defrule
(or	(up-compare-goal gl-treaty-time >= 1)
(or	(up-timer-status tribute-timer == timer-running)
(or	(not	(player-in-game any-ally))
(or	(players-building-type-count every-ally market <= 0)
	(and	(goal strategy sling)
		(and	(building-type-count-total town-center >= 1)
			(unit-type-count-total villager >= 1)))))))
=>
	(up-jump-rule 27))
(defrule
(or	(up-compare-const inf-game == yes)
	(and	(player-in-game any-human-ally)
		(or	(and	(game-time < tribute-delay2)
				(up-allied-resource-percent every-ally amount-tribute-inefficiency >= 25))
			(and	(game-time < tribute-delay)
				(up-allied-resource-percent every-ally amount-tribute-inefficiency >= 13)))))
=>
	(up-jump-rule 26))
(defrule
	(true)
=>
	(set-goal temporary-goal 0)
	(set-goal temporary-goal2 0)
	(set-goal temporary-goal3 0)
	(set-goal temporary-goal4 0))
(defrule
(not	(taunt-detected my-player-number 6))
	(building-type-count-total town-center <= 0)
	(stone-amount < tc-stone)
	(unit-type-count-total villager >= 1)
	(players-building-type-count any-ally town-center >= 1)
	(up-allied-resource-amount any-ally stone > 0)
=>
	(set-goal temporary-goal4 1)
	(enable-timer tribute-timer tribute-delay)
	(up-jump-rule 1))
(defrule
(not	(taunt-detected my-player-number 6))
	(up-pending-objects c: town-center == 0)
	(building-type-count-total town-center < 3); 5
(or	(building-type-count-total town-center <= 0)
	(goal underattack yes))
	(military-population < 12)
	(players-military-population any-ally >= 25)
	(unit-type-count-total villager >= 1)
	(stone-amount < tc-stone)
=>
	(set-goal temporary-goal4 1)
	(enable-timer tribute-timer tribute-delay))
(defrule
(not	(taunt-detected my-player-number 4))
	(building-type-count-total town-center <= 0)
	(wood-amount < 275)
	(unit-type-count-total villager >= 1)
	(players-building-type-count any-ally town-center >= 1)
	(up-allied-resource-amount any-ally wood > 0)
=>
	(set-goal temporary-goal 1)
	(enable-timer tribute-timer tribute-delay)
	(up-jump-rule 1))
(defrule
(not	(taunt-detected my-player-number 4))
	(up-pending-objects c: town-center == 0)
	(building-type-count-total town-center < 3); 5
(or	(building-type-count-total town-center <= 0)
	(goal underattack yes))
	(military-population < 12)
	(players-military-population any-ally >= 25)
	(unit-type-count-total villager >= 1)
	(wood-amount < 275)
	(up-allied-resource-amount any-ally wood > 0)
=>
	(set-goal temporary-goal 1)
	(enable-timer tribute-timer tribute-delay))
(defrule
(not	(taunt-detected my-player-number 3))
	(goal underattack no)
	(building-type-count town-center >= 1)
	(unit-type-count-total villager < 32)
	(players-unit-type-count any-ally villager >= 64)
	(food-amount < vill-cost)
	(housing-headroom >= 1)
	(up-compare-goal custom-civ-pop < up-max-civ)
	(civilian-population < up-max-civ)
	(population < max-civ-pop)
	(up-allied-resource-amount any-ally food > 100)
=>
	(set-goal temporary-goal2 1)
	(enable-timer tribute-timer tribute-delay))

(defrule
(not	(taunt-detected my-player-number 4))
	(goal migration-state 1)
	(unit-type-count-total transport-ship < 1)
	(wood-amount < 125)
	(unit-type-count-total villager >= 1)
	(housing-headroom >= 1)
	(up-compare-goal gl-threat-time > 24000)
	(goal underattack no)
	(goal defend no)
	(up-allied-resource-amount any-ally wood > 500)
=>
	(set-goal temporary-goal 1))
(defrule
(not	(taunt-detected my-player-number 4))
(or	(wood-amount < 100)
	(up-compare-goal excessWood <= 0))
(or	(unit-type-count-total villager >= 1)
	(building-type-count town-center >= 1))
	(up-allied-resource-amount any-ally wood > 500)
(or	(up-allied-resource-percent any-ally amount-tribute-inefficiency < 25)
	(up-allied-resource-amount any-ally wood > 800))
=>
	(set-goal temporary-goal 1))
(defrule
(not	(taunt-detected my-player-number 3))
(or	(food-amount < 100)
	(up-compare-goal excessFood <= 0))
(or	(unit-type-count-total villager >= 1)
	(building-type-count town-center >= 1))
	(up-allied-resource-amount any-ally food > 500)
(or	(up-allied-resource-percent any-ally amount-tribute-inefficiency < 25)
	(up-allied-resource-amount any-ally food > 800))
=>
	(set-goal temporary-goal2 1))
(defrule
(not	(taunt-detected my-player-number 5))
(or	(gold-amount < 100)
	(up-compare-goal excessGold <= 0))
(or	(unit-type-count-total villager >= 1)
	(building-type-count town-center >= 1))
	(up-allied-resource-amount any-ally gold > 500)
(or	(up-allied-resource-percent any-ally amount-tribute-inefficiency < 25)
	(up-allied-resource-amount any-ally gold > 800))
=>
	(set-goal temporary-goal3 1))
(defrule
(not	(taunt-detected my-player-number 6))
	(strategic-number sn-current-age >= imperial); dreitc yes
	(building-available castle)
	(unit-type-count villager-stone <= 0)
	(stone-amount < castle-stone)
	(building-type-count-total castle <= 0)
(or	(unit-type-count-total villager >= 1)
	(building-type-count town-center >= 1))
	(players-building-type-count any-ally castle >= 1)
	(up-allied-resource-amount any-ally stone > 0)
(or	(up-allied-resource-percent any-ally amount-tribute-inefficiency < 25)
	(up-allied-resource-amount any-ally stone > castle-stone))
=>
	(set-goal temporary-goal4 1))

(defrule
(not	(taunt-detected my-player-number 4))
	(wood-amount < 200)
(or	(unit-type-count-total villager >= 1)
	(building-type-count town-center >= 1))
	(up-allied-resource-percent any-ally amount-tribute-inefficiency < 25)
	(up-allied-resource-amount any-ally wood > 2000)
=>
	(set-goal temporary-goal 1))
(defrule
(not	(taunt-detected my-player-number 3))
	(food-amount < 200)
(or	(unit-type-count-total villager >= 1)
	(building-type-count town-center >= 1))
	(up-allied-resource-percent any-ally amount-tribute-inefficiency < 25)
	(up-allied-resource-amount any-ally food > 2000)
=>
	(set-goal temporary-goal2 1))
(defrule
(not	(taunt-detected my-player-number 5))
	(gold-amount < 200)
(or	(unit-type-count-total villager >= 1)
	(building-type-count town-center >= 1))
	(up-allied-resource-percent any-ally amount-tribute-inefficiency < 25)
	(up-allied-resource-amount any-ally gold > 2000)
=>
	(set-goal temporary-goal3 1))
(defrule
(not	(taunt-detected my-player-number 4))
	(wood-amount < 100)
	(unit-type-count-total 178 <= 0)
	(unit-type-count-total 205 <= 0)
	(unit-type-count villager <= 0)
	(building-type-count town-center <= 0)
	(building-type-count market >= 1)
	(housing-headroom >= 1)
	(up-allied-resource-amount any-ally wood > 500)
(or	(up-allied-resource-percent any-ally amount-tribute-inefficiency < 25)
	(up-allied-resource-amount any-ally wood > 1000))
	(strategic-number teamsuperiority >= 0); safe enough?
=>
	(set-goal temporary-goal 1))
(defrule
(not	(taunt-detected my-player-number 5))
	(gold-amount < 50)
	(unit-type-count-total 178 <= 0)
	(unit-type-count-total 205 <= 0)
	(unit-type-count villager <= 0)
	(building-type-count town-center <= 0)
	(building-type-count market >= 1)
	(housing-headroom >= 1)
	(up-allied-resource-amount any-ally gold > 500)
(or	(up-allied-resource-percent any-ally amount-tribute-inefficiency < 25)
	(up-allied-resource-amount any-ally gold > 1000))
	(strategic-number teamsuperiority >= 0)
=>
	(set-goal temporary-goal3 1))
(defrule
(not	(taunt-detected my-player-number 5))
	(gold-amount < 100)
	(unit-type-count villager <= 0)
	(building-type-count town-center <= 0)
	(building-type-count monastery >= 1)
	(housing-headroom >= 1)
	(up-allied-resource-amount any-ally gold > 500)
(or	(up-allied-resource-percent any-ally amount-tribute-inefficiency < 25)
	(up-allied-resource-amount any-ally gold > 1000))
	(strategic-number teamsuperiority >= 0)
=>
	(set-goal temporary-goal3 1))

(defrule
	(goal temporary-goal 1)
	(player-valid any-human-ally)
(not	(taunt-detected my-player-number 4))
=>
	(chat-to-player-using-id every-ally 22123); "4 Wood please!"
	(up-jump-rule 7))
(defrule
	(goal temporary-goal2 1)
	(player-valid any-human-ally)
(not	(taunt-detected my-player-number 3))
=>
	(chat-to-player-using-id every-ally 22122); "3 Food please!"
	(up-jump-rule 6))
#load-if-defined DE-AVAILABLE
(defrule
	(goal temporary-goal3 1)
	(player-valid any-human-ally)
(not	(taunt-detected my-player-number 5))
=>
	(chat-to-player-using-id every-ally 22124); "5 Gold please!"
	(up-jump-rule 5))
#else
(defrule
	(goal temporary-goal3 1)
	(player-valid any-human-ally)
(not	(taunt-detected my-player-number 5))
=>
	(chat-to-allies "5 Gold please!")
	(up-jump-rule 5))
#end-if
(defrule
	(goal temporary-goal4 1)
	(player-valid any-human-ally)
(not	(taunt-detected my-player-number 6))
=>
	(chat-to-player-using-id every-ally 22125); "6 Stone please!"
	(up-jump-rule 4))
(defrule
	(goal temporary-goal 1)
(not	(taunt-detected my-player-number 4))
=>
	(chat-to-player-using-id every-ally 22123)); "4 Wood please!"
(defrule
	(goal temporary-goal2 1)
(not	(taunt-detected my-player-number 3))
=>
	(chat-to-player-using-id every-ally 22122)); "3 Food please!"
#load-if-defined DE-AVAILABLE
(defrule
	(goal temporary-goal3 1)
(not	(taunt-detected my-player-number 5))
=>
	(chat-to-player-using-id every-ally 22124)); "5 Gold please!"
#else
(defrule
	(goal temporary-goal3 1)
(not	(taunt-detected my-player-number 5))
=>
	(chat-to-allies "5 Gold please!"))
#end-if
(defrule
	(goal temporary-goal4 1)
(not	(taunt-detected my-player-number 6))
=>
	(chat-to-player-using-id every-ally 22125)); "6 Stone please!"

(defrule
	(up-timer-status tribute-timer != timer-running)
(or	(goal temporary-goal 1)
(or	(goal temporary-goal2 1)
(or	(goal temporary-goal3 1)
	(goal temporary-goal4 1))))
=>
	(enable-timer tribute-timer tribute-delay2)); end jump



(defrule
	(up-timer-status tribute-timer != timer-running)
(or	(taunt-detected my-player-number 3)
(or	(taunt-detected my-player-number 4)
(or	(taunt-detected my-player-number 5)
	(taunt-detected my-player-number 6))))
=>
	(acknowledge-taunt my-player-number 3)
	(acknowledge-taunt my-player-number 4)
	(acknowledge-taunt my-player-number 5)
	(acknowledge-taunt my-player-number 6)
	(enable-timer tribute-timer tribute-delay2))
(defrule
	(up-timer-status tribute-timer == timer-running)
(or	(taunt-detected my-player-number 3)
(or	(taunt-detected my-player-number 4)
(or	(taunt-detected my-player-number 5)
	(taunt-detected my-player-number 6))))
=>
	(acknowledge-taunt my-player-number 3)
	(acknowledge-taunt my-player-number 4)
	(acknowledge-taunt my-player-number 5)
	(acknowledge-taunt my-player-number 6))

(defrule
(or	(building-type-count market <= 0)
(or	(up-compare-goal gl-treaty-time >= 1)
(or	(up-compare-const inf-game == yes)
	(up-timer-status threesec == timer-running))))
=>
	(up-jump-rule 8)); 7
(defrule
(or	(not	(player-in-game any-ally))
(or	(strategic-number sn-current-age < imperial)
(or	(and	(up-compare-goal excessWood < 2300)
		(and	(up-compare-goal excessFood < 2300)
			(up-compare-goal excessGold < 2300)))
(or	(goal underattack yes)
	(up-research-status c: ri-banking < research-complete)))))
=>
	(up-jump-rule 7)); 6
(defrule
	(true)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 1)
	(set-goal temporary-goal2 0))
(defrule
	(stance-toward focus-player ally)
	(player-in-game focus-player)
	(strategic-number sn-focus-player-number != my-player-number)
	(up-compare-goal excessWood >= 2200)
	(players-population focus-player >= 32)
(or	(players-unit-type-count focus-player villager >= 24)
	(players-building-type-count focus-player town-center >= 1))
	(up-allied-resource-amount focus-player wood < 1000)
=>
	(tribute-to-player focus-player wood 1000)
	;(chat-to-player focus-player text-here-is-wood)
	(chat-to-player-using-id focus-player 22076); "39 Here is some wood!"
	(chat-local-to-self text-tributing-1000wood)
	(set-goal temporary-goal2 1))
(defrule
	(stance-toward focus-player ally)
	(player-in-game focus-player)
	(strategic-number sn-focus-player-number != my-player-number)
	(up-compare-goal excessFood >= 2200)
	(players-population focus-player >= 32)
(or	(players-unit-type-count focus-player villager >= 24)
	(players-building-type-count focus-player town-center >= 1))
	(up-allied-resource-amount focus-player food < 1000)
=>
	(tribute-to-player focus-player food 1000)
	;(chat-to-player focus-player text-here-is-food)
	(chat-to-player-using-id focus-player 22077); "39 Here is some food!"
	(chat-local-to-self text-tributing-1000food)
	(set-goal temporary-goal2 1))
(defrule
	(stance-toward focus-player ally)
	(player-in-game focus-player)
	(strategic-number sn-focus-player-number != my-player-number)
	(up-compare-goal excessGold >= 2200)
	(players-population focus-player >= 32)
(or	(players-unit-type-count focus-player villager >= 24)
	(players-building-type-count focus-player town-center >= 1))
	(up-allied-resource-amount focus-player gold < 1000)
=>
	(tribute-to-player focus-player gold 1000)
	;(chat-to-player focus-player text-here-is-gold)
	(chat-to-player-using-id focus-player 22078); "39 Here is some gold!"
	(chat-local-to-self text-tributing-1000gold)
	(set-goal temporary-goal2 1))
(defrule
	(stance-toward focus-player ally)
	(player-in-game focus-player)
	(strategic-number sn-focus-player-number != my-player-number)
	(up-compare-goal excessStone >= castle-tc-stone); 1260
	(building-type-count-total castle >= 5)
	(up-compare-goal wwonder != yes)
	(players-population focus-player >= 32)
(or	(players-unit-type-count focus-player villager >= 24)
	(players-building-type-count focus-player town-center >= 1))
	(up-allied-resource-amount focus-player stone < 100)
=>
	(tribute-to-player focus-player stone 100)
	;(chat-to-player focus-player text-here-is-stone)
	(chat-to-player-using-id focus-player 22079); "39 Here is some stone!"
	(chat-local-to-self text-tributing-100stone)
	(set-goal temporary-goal2 1))
(defrule
	(up-compare-goal temporary-goal2 != 1)
	(strategic-number sn-focus-player-number < 8)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -5)); 4
(defrule
	(true)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal)); end jump


#load-if-not-defined INFINITE-RESOURCES-START
(defrule
	(game-time > 600)
	(unit-type-count villager <= 0)
	(building-type-count town-center <= 0)
	(building-type-count market >= 1)
	(up-compare-goal excessGold >= 500)
(or	(housing-headroom <= 0)
(or	(gold-amount >= 1200)
	(up-compare-goal tradeunits >= 15)))
	(players-building-type-count any-ally town-center >= 1)
	(player-in-game any-ally)
=>
	(tribute-to-player this-any-ally gold 400)
	;(chat-to-player this-any-ally text-here-is-gold)
	(chat-to-player-using-id this-any-ally 22078); "39 Here is some gold!"
	(chat-local-to-self text-tributing-400gold))
(defrule
	(game-time > 600)
	(unit-type-count villager <= 0)
	(building-type-count town-center <= 0)
	(building-type-count market >= 1)
(or	(up-compare-goal excessFood >= 1)
	(up-compare-goal excessStone >= 1))
	(players-building-type-count any-ally town-center >= 1)
	(player-in-game any-ally)
=>
	(tribute-to-player this-any-ally food 99999)
	(tribute-to-player this-any-ally stone 99999)
	;(chat-to-player this-any-ally text-here-is-food)
	(chat-to-player-using-id this-any-ally 22077); "39 Here is some food!"
	;(chat-to-player this-any-ally text-here-is-stone)
	(chat-to-player-using-id this-any-ally 22079); "39 Here is some stone!"
	(chat-local-to-self text-tributing-1000food)
	(chat-local-to-self text-tributing-1000stone)
	(disable-self))
(defrule
	(game-time > 600)
	(unit-type-count villager <= 0)
	(building-type-count town-center <= 0)
	(building-type-count market >= 1)
(or	(up-compare-goal excessFood >= 100)
	(up-compare-goal excessStone >= 100))
	(players-building-type-count any-ally town-center >= 1)
	(player-in-game any-ally)
=>
	(tribute-to-player this-any-ally food 1000)
	(tribute-to-player this-any-ally stone 1000)
	;(chat-to-player this-any-ally text-here-is-food)
	(chat-to-player-using-id this-any-ally 22077); "39 Here is some food!"
	;(chat-to-player this-any-ally text-here-is-stone)
	(chat-to-player-using-id this-any-ally 22079); "39 Here is some stone!"
	(chat-local-to-self text-tributing-1000food)
	(chat-local-to-self text-tributing-1000stone))
#end-if




(defrule
	(taunt-detected any-ally 42)
	(current-age <= dark-age)
=>
	(chat-to-player-using-id every-ally 22165); "39 Alas, sire. I languish in the Dark Age."
	(acknowledge-taunt every-ally 42))
(defrule
	(taunt-detected any-ally 42)
	(current-age == feudal-age)
=>
	(chat-to-player-using-id every-ally 22166); "39 Sire, I have attained unto the Feudal Age."
	(acknowledge-taunt every-ally 42))
(defrule
	(taunt-detected any-ally 42)
	(current-age == castle-age)
=>
	(chat-to-player-using-id every-ally 22167); "39 Sire, I have attained unto the Castle Age!"
	(acknowledge-taunt every-ally 42))
(defrule
	(taunt-detected any-ally 42)
	(current-age >= imperial-age)
=>
	(chat-to-player-using-id every-ally 22168); "39 Ah, sire! I am in the glorious Imperial Age"
	(acknowledge-taunt every-ally 42))



#load-if-not-defined DIFFICULTY-EASIEST
#load-if-not-defined DIFFICULTY-EASY
#load-if-not-defined DIFFICULTY-MODERATE
(defrule
	(up-compare-goal gl-random-number <= 1)
	(goal attacking yes)
	(strategic-number sn-military-superiority >= 2)
	(strategic-number sn-current-age >= feudal)
=>
	(chat-to-all-using-range 22096 2)
	(disable-self))
(defrule
	(up-compare-goal gl-random-number <= 4)
	(up-compare-goal gl-random-number <= 2)
	(goal attacking yes)
	(strategic-number sn-military-superiority >= 2)
	(strategic-number sn-current-age >= castlea)
=>
	(chat-to-all-using-range 22099 6)
	(disable-self))
#end-if
#end-if
#end-if

(defrule
	(up-compare-goal gl-random-number <= 2)
	(up-allied-goal every-ally gl-random-number <= 2)
	(player-in-game any-human-enemy)
	(goal underattack yes)
	(strategic-number sn-military-superiority <= -2)
	(game-time > contact-delay)
	(up-compare-goal resign != yes)
=>
	(chat-to-all-using-id 22108); "I am weak. Please do not attack me."
	(disable-self))



;#load-if-not-defined UP-2-PLAYER-GAME
#load-if-not-defined TEAMS-LOCKED
#load-if-not-defined UP-SCENARIO-GAME
(defrule
(nor	(players-stance any-human-neutral ally)
(or	(players-stance any-human-enemy neutral)
	(players-stance any-human-enemy ally)))
	(up-compare-goal request == 1)
=>
	(set-goal request 0))
(defrule
(or	(up-compare-goal feinde <= 1)
(or	(game-time < 8)
(or	(up-timer-status stancet != timer-disabled)
	(nand	(goal request 0)
		(goal stanceg 0)))))
=>
;	(chat-to-all "test")
	(up-jump-rule 3))
(defrule
;t(nor	(player-in-game any-ally)
;t	(player-in-game 3))
	(players-stance any-human-neutral ally)
=>
;	(up-get-player-fact this-any-human-neutral player-number 0 temporary-goal)
;	(up-chat-data-to-all "test: %d" g: temporary-goal)
	(chat-to-player-using-id this-any-human-neutral string-tribute); "Send me %d each of wood, food, gold, and stone!"
	(chat-to-player-using-id this-any-human-neutral 22005); "If thou dost this thing, I shall join thy side."
	(set-goal request 1))
(defrule
;t(nor	(player-in-game any-ally)
;t	(player-in-game 3))
	(players-stance any-human-enemy ally)
=>
;	(up-get-player-fact this-any-human-neutral player-number 0 temporary-goal)
;	(up-chat-data-to-all "test: %d" g: temporary-goal)
	(chat-to-player-using-id this-any-human-enemy string-tribute); "Send me %d each of wood, food, gold, and stone!"
	(chat-to-player-using-id this-any-human-enemy 22005); "If thou dost this thing, I shall join thy side."
	(set-goal request 1))
(defrule
;t(nor	(player-in-game any-ally)
;t	(player-in-game 3))
	(players-stance any-human-enemy neutral)
=>
;	(up-get-player-fact this-any-human-neutral player-number 0 temporary-goal)
;	(up-chat-data-to-all "test: %d" g: temporary-goal)
	(chat-to-player-using-id this-any-human-enemy string-tribute); "Send me %d each of wood, food, gold, and stone!"
	(chat-to-player-using-id this-any-human-enemy 22005); "If thou dost this thing, I shall join thy side."
	(set-goal request 1)); end jump
;(defrule
;	(timer-triggered two-mins)
;	(game-time >= 300)
;	(random-number < 25)
;	(goal request2 1)
;=>
;	(chat-to-player-using-id every-human 2304); "Alas! We could have made an unstoppable team."
;	(set-goal request2 0)
;	(disable-self))
(defrule
(or	(up-compare-goal feinde <= 1)
(or	(game-time < contact-delay)
(or	(up-timer-status two-mins != timer-triggered)
(or	(random-number >= 42)
(or	(and	(up-compare-goal custom-civ-pop < 16)
		(up-compare-goal custom-civ-pop < up-max-civ))
	(and	(players-population every-human < 16)
		(players-population every-human < up-max-civ)))))))
=>
	(up-jump-rule 2))
(defrule
(or	(up-compare-goal request2 != 0)
(or	(goal attacking yes)
(or	(player-in-game any-human-ally);
(or	(players-building-type-count every-human market <= 0)
	(and	(building-type-count-total market <= 0)
		(strategic-number sn-current-age < imperial))))))
=>
	(up-jump-rule 1))
(defrule
(or	(not	(player-in-game any-ally))
	(random-number < 32))
(or	(not	(stance-toward any-human ally))
	(random-number < 16))
=>
	(chat-to-player-using-id every-human string-tribute); "Send me %d each of wood, food, gold, and stone!"
	(chat-to-player-using-id every-human 22005); "If thou dost this thing, I shall join thy side."
	(set-goal request2 1)
	(disable-self))
(defrule
	(up-compare-goal request != 1)
	(up-compare-goal request2 != 1)
=>
	(up-jump-rule 11))
(defrule
	(goal request2 1)
	(up-compare-const diplomacy-tribute > 100)
	(players-tribute-memory any-human-neutral wood >= diplomacy-tribute)
	(players-tribute-memory any-human-neutral food >= diplomacy-tribute)
	(players-tribute-memory any-human-neutral gold >= diplomacy-tribute)
	(players-tribute-memory any-human-neutral stone >= diplomacy-tribute)
=>
	(chat-to-player-using-id this-any-human-neutral 22002); "39 I am grateful for thy tribute."
	(chat-to-player-using-id this-any-human-neutral 22003); "39 Let us be friends henceforth!"
	(set-stance this-any-human-neutral ally)
	(set-goal request2 0)
	(clear-tribute-memory this-any-human-neutral wood)
	(clear-tribute-memory this-any-human-neutral food)
	(clear-tribute-memory this-any-human-neutral gold)
	(clear-tribute-memory this-any-human-neutral stone)
	(up-jump-rule 9))
(defrule
	(goal request2 1)
	(up-compare-const diplomacy-tribute > 100)
	(players-tribute-memory any-human-enemy wood >= diplomacy-tribute)
	(players-tribute-memory any-human-enemy food >= diplomacy-tribute)
	(players-tribute-memory any-human-enemy gold >= diplomacy-tribute)
	(players-tribute-memory any-human-enemy stone >= diplomacy-tribute)
=>
	(chat-to-player-using-id this-any-human-enemy 22016); "39 The goods we have obtained from thee are glorious!"
	(chat-to-player-using-id this-any-human-enemy 2303); "You have made a wise choice -- together we shall rule the world."
	(set-stance this-any-human-enemy ally)
	(set-goal request2 0)
	(clear-tribute-memory this-any-human-enemy wood)
	(clear-tribute-memory this-any-human-enemy food)
	(clear-tribute-memory this-any-human-enemy gold)
	(clear-tribute-memory this-any-human-enemy stone)
	(up-jump-rule 8))
(defrule
(or	(up-compare-goal request2 != 1)
	(up-compare-const diplomacy-tribute > 100))
=>
	(up-jump-rule 2))
(defrule
(or	(players-tribute-memory any-human-neutral wood >= diplomacy-tribute)
(or	(players-tribute-memory any-human-neutral food >= diplomacy-tribute)
(or	(players-tribute-memory any-human-neutral gold >= diplomacy-tribute)
	(players-tribute-memory any-human-neutral stone >= diplomacy-tribute))))
=>
	(chat-to-player-using-id this-any-human-neutral 22002); "39 I am grateful for thy tribute."
	(chat-to-player-using-id this-any-human-neutral 22003); "39 Let us be friends henceforth!"
	(set-stance this-any-human-neutral ally)
	(set-goal request2 0)
	(clear-tribute-memory this-any-human-neutral wood)
	(clear-tribute-memory this-any-human-neutral food)
	(clear-tribute-memory this-any-human-neutral gold)
	(clear-tribute-memory this-any-human-neutral stone)
	(up-jump-rule 1))
(defrule
(or	(players-tribute-memory any-human-enemy wood >= diplomacy-tribute)
(or	(players-tribute-memory any-human-enemy food >= diplomacy-tribute)
(or	(players-tribute-memory any-human-enemy gold >= diplomacy-tribute)
	(players-tribute-memory any-human-enemy stone >= diplomacy-tribute))))
=>
	(chat-to-player-using-id this-any-human-enemy 22016); "39 The goods we have obtained from thee are glorious!"
	(chat-to-player-using-id this-any-human-enemy 2303); "You have made a wise choice -- together we shall rule the world."
	(set-stance this-any-human-enemy ally)
	(set-goal request2 0)
	(clear-tribute-memory this-any-human-enemy wood)
	(clear-tribute-memory this-any-human-enemy food)
	(clear-tribute-memory this-any-human-enemy gold)
	(clear-tribute-memory this-any-human-enemy stone)); end jump
(defrule
(or	(up-compare-goal request != 1)
	(up-compare-const diplomacy-tribute > 100))
=>
	(up-jump-rule 2))
(defrule
(or	(players-tribute-memory any-human-neutral wood >= diplomacy-tribute)
(or	(players-tribute-memory any-human-neutral food >= diplomacy-tribute)
(or	(players-tribute-memory any-human-neutral gold >= diplomacy-tribute)
	(players-tribute-memory any-human-neutral stone >= diplomacy-tribute))))
=>
	(chat-to-player-using-id this-any-human-neutral 22002); "39 I am grateful for thy tribute."
	(chat-to-player-using-id this-any-human-neutral 22003); "39 Let us be friends henceforth!"
	(set-stance this-any-human-neutral ally)
	(set-goal request 0)
	(clear-tribute-memory this-any-human-neutral wood)
	(clear-tribute-memory this-any-human-neutral food)
	(clear-tribute-memory this-any-human-neutral gold)
	(clear-tribute-memory this-any-human-neutral stone)
	(up-jump-rule 3))
(defrule
(or	(players-tribute-memory any-human-enemy wood >= diplomacy-tribute)
(or	(players-tribute-memory any-human-enemy food >= diplomacy-tribute)
(or	(players-tribute-memory any-human-enemy gold >= diplomacy-tribute)
	(players-tribute-memory any-human-enemy stone >= diplomacy-tribute))))
=>
	(chat-to-player-using-id this-any-human-enemy 22016); "39 The goods we have obtained from thee are glorious!"
	(chat-to-player-using-id this-any-human-enemy 2303); "You have made a wise choice -- together we shall rule the world."
	(set-stance this-any-human-enemy ally)
	(set-goal request 0)
	(clear-tribute-memory this-any-human-enemy wood)
	(clear-tribute-memory this-any-human-enemy food)
	(clear-tribute-memory this-any-human-enemy gold)
	(clear-tribute-memory this-any-human-enemy stone)
	(up-jump-rule 2)); end jump
(defrule
	(goal request 1)
	(up-compare-const diplomacy-tribute > 100)
	(players-tribute-memory any-human-neutral wood >= diplomacy-tribute)
	(players-tribute-memory any-human-neutral food >= diplomacy-tribute)
	(players-tribute-memory any-human-neutral gold >= diplomacy-tribute)
	(players-tribute-memory any-human-neutral stone >= diplomacy-tribute)
=>
	(chat-to-player-using-id this-any-human-neutral 22002); "39 I am grateful for thy tribute."
	(chat-to-player-using-id this-any-human-neutral 22003); "39 Let us be friends henceforth!"
	(set-stance this-any-human-neutral ally)
	(set-goal request 0)
	(clear-tribute-memory this-any-human-neutral wood)
	(clear-tribute-memory this-any-human-neutral food)
	(clear-tribute-memory this-any-human-neutral gold)
	(clear-tribute-memory this-any-human-neutral stone)
	(up-jump-rule 1))
(defrule
	(goal request 1)
	(up-compare-const diplomacy-tribute > 100)
	(players-tribute-memory any-human-enemy wood >= diplomacy-tribute)
	(players-tribute-memory any-human-enemy food >= diplomacy-tribute)
	(players-tribute-memory any-human-enemy gold >= diplomacy-tribute)
	(players-tribute-memory any-human-enemy stone >= diplomacy-tribute)
=>
	(chat-to-player-using-id this-any-human-enemy 22016); "39 The goods we have obtained from thee are glorious!"
	(chat-to-player-using-id this-any-human-enemy 2303); "You have made a wise choice -- together we shall rule the world."
	(set-stance this-any-human-enemy ally)
	(set-goal request 0)
	(clear-tribute-memory this-any-human-enemy wood)
	(clear-tribute-memory this-any-human-enemy food)
	(clear-tribute-memory this-any-human-enemy gold)
	(clear-tribute-memory this-any-human-enemy stone)); end jump
(defrule
	(goal request 0)
	(goal request2 0)
;	(up-timer-status stancet != timer-running)
=>
	(enable-timer stancet 24)); end jump
#end-if; not scenario game
(defrule
	(game-time > 60)
	(goal stanceg 0)
(or	(players-stance any-human-ally neutral)
	(players-stance any-human-ally enemy))
	(up-timer-status stancet != timer-running)
=>
	(chat-to-player-using-id this-any-human-ally 22017); "Set thy stance to Ally with me!"
	(set-stance this-any-human-ally neutral)
	(enable-timer stancet 24)
	(set-goal stanceg 1))
(defrule
	(game-time > 60)
	(up-compare-const diff-fp != 1)
;	(timer-triggered stancet)
	(goal stanceg 1)
(or	(players-stance any-human-ally neutral)
	(players-stance any-human-ally enemy))
	(up-timer-status stancet != timer-running)
(or	(random-number <= 8)
	(random-number >= 64))
=>
	(chat-to-player-using-id this-any-human-ally 22030); "41 Thou ignorest my invitation? In mercy, I give you a second chance."
	(enable-timer stancet 24)
	(disable-self))
(defrule
	(game-time > 60)
	(up-compare-const diff-fp != 1)
;	(timer-triggered stancet)
	(goal stanceg 1)
(or	(players-stance any-human-ally neutral)
	(players-stance any-human-ally enemy))
	(up-timer-status stancet != timer-running)
	(up-compare-goal custom-civ-pop >= up-max-civ)
(or	(random-number <= 2)
	(random-number >= 91))
=>
	(chat-to-player-using-id this-any-human-ally 22033); "This is thy last opportunity."
	(enable-timer stancet 24)
	(disable-self))
(defrule
	(game-time > 60)
	(goal stanceg 0)
	(players-stance any-human-neutral enemy)
	(up-timer-status stancet != timer-running)
=>
	(chat-to-player-using-id this-any-human-neutral 22027); "41 I am Neutral to thee. Set thy diplomacy to Neutral to me."
	(enable-timer stancet 24)
	(set-goal stanceg 1))
(defrule
	(game-time > 60)
	(up-compare-const diff-fp != 1)
;	(timer-triggered stancet)
	(goal stanceg 1)
	(players-stance any-human-neutral enemy)
	(up-timer-status stancet != timer-running)
	(random-number >= 8)
	(random-number <= 64)
=>
	(chat-to-player-using-id this-any-human-neutral 22032); "41 How unwise. Thou art still hostile to me. Set to Neutral at once versus me!"
	(enable-timer stancet 24)
	(disable-self))
(defrule
	(timer-triggered stancet)
	(goal stanceg 1)
	(players-stance any-human-neutral ally)
	(population < up-max-civ)
=>
	(chat-to-player-using-id this-any-human-neutral 2303); "You have made a wise choice -- together we shall rule the world."
	(set-stance this-any-human-neutral ally)
	(disable-timer stancet)
	(set-goal stanceg 0)
	(up-jump-rule 1))
(defrule
	(timer-triggered stancet)
	(goal stanceg 1)
	(players-stance any-human-neutral ally)
	(population >= up-max-civ)
=>
	(chat-to-player-using-id this-any-human-neutral 2302); "It was wise to do as I requested."
	(set-stance this-any-human-neutral ally)
	(disable-timer stancet)
	(set-goal stanceg 0)); end jump
(defrule
	(timer-triggered stancet)
	(goal stanceg 1)
(or	(players-stance any-human-ally neutral)
	(players-stance any-human-ally enemy))
=>
	(chat-to-player-using-id this-any-human-ally 22025); "40 So! Thou has chosen to defy me."
	(chat-to-player-using-id this-any-human-ally string-betrayed)
	(set-stance this-any-human-ally enemy)
	(disable-timer stancet)
	(set-goal stanceg 0))
(defrule
	(timer-triggered stancet)
	(goal stanceg 1)
	(players-stance any-human-neutral enemy)
=>
	(chat-to-player-using-id this-any-human-neutral 22023); "40 Thou hast taken far too long to do that simple task."
	(chat-to-player-using-id this-any-human-neutral string-betrayed2)
	(set-stance this-any-human-neutral enemy)
	(disable-timer stancet)
	(set-goal stanceg 0))
(defrule
	(timer-triggered stancet)
	(goal stanceg 1)
=>
	(chat-local-to-self "All is well.")
	(disable-timer stancet)
	(set-goal stanceg 0))
(defrule
	(players-stance any-computer-neutral enemy)
=>
;	(chat-to-player-using-id this-any-computer-neutral 22034); "40 I have thought better of mine previous merciful plan."
	(set-stance this-any-computer-neutral enemy))
(defrule
(or	(players-stance any-computer-ally neutral)
	(players-stance any-computer-ally enemy))
=>
;	(chat-to-player-using-id this-any-computer-ally 2305); "You dare defy me?! Prepare to die!"
	(set-stance this-any-computer-ally enemy))

#load-if-not-defined DIFFICULTY-EASIEST
#load-if-not-defined DIFFICULTY-EASY
(defrule
(or	(up-timer-status twentysec != timer-triggered)
(or	(game-time < 256)
(or	(up-compare-goal gl-treaty-time >= 1)
(or	(player-in-game any-enemy)
	(player-in-game any-neutral)))))
=>
	(up-jump-rule 2))
(defrule
	(game-time > 1024)
(or	(population >= up-max-civ)
(or	(town-under-attack)
(or	(up-compare-goal gl-threat-time < 3000)
	(up-timer-status two-mins != timer-running))))
	(player-in-game any-ally)
=>
	(enable-timer stancet 24)
	(set-goal stanceg 0)
	(set-goal request 0)
	(chat-to-player-using-id this-any-ally string-traitor1)
	(chat-to-player-using-id this-any-ally string-traitor2)
	(set-stance this-any-ally enemy)
	(up-jump-rule 1))
(defrule
(or	(population >= up-max-civ)
(or	(town-under-attack)
(or	(up-compare-goal gl-threat-time < 3000)
	(up-timer-status two-mins != timer-running))))
	(player-in-game any-neutral)
=>
	(enable-timer stancet 24)
	(set-goal stanceg 0)
	(set-goal request 0)
	(chat-to-player-using-id this-any-ally string-traitor1)
	(chat-to-player-using-id this-any-ally string-traitor2)
	(set-stance this-any-neutral enemy)); end jump

(defrule
	(up-timer-status stancet == timer-disabled)
	(up-compare-goal feinde <= 1)
	(players-stance any-human-enemy neutral)
	(game-time > 2)
=>
	(chat-to-player-using-id this-any-human-enemy 22121); "2"
	(chat-to-player-using-id this-any-human-enemy 22026); "It shall be war to the knife!"
	(disable-self)
	(up-jump-rule 2))
(defrule
	(up-timer-status stancet == timer-disabled)
	(up-compare-goal feinde <= 1)
	(players-stance any-human-neutral ally)
	(game-time > 2)
=>
	(chat-to-player-using-id this-any-human-neutral 22121); "2"
	(chat-to-player-using-id this-any-human-neutral string-traitor2)
	(disable-self)
	(up-jump-rule 1))
(defrule
	(up-timer-status stancet == timer-disabled)
	(up-compare-goal feinde <= 1)
	(players-stance any-human-enemy ally)
	(game-time > 2)
=>
	(chat-to-player-using-id this-any-human-enemy 22121); "2"
	(chat-to-player-using-id this-any-human-enemy 22026); "It shall be war to the knife!"
	(disable-self))
(defrule
	(up-timer-status stancet == timer-triggered)
	(up-compare-goal feinde <= 1)
	(players-stance any-human-enemy neutral)
	(game-time > 2)
	(goal request 0)
	(goal stanceg 0)
=>
	(disable-timer stancet)
;	(chat-to-player-using-id this-any-human-enemy 22121); "2"
	(chat-to-player-using-id this-any-human-enemy 22026); "It shall be war to the knife!"
	(up-jump-rule 2))
(defrule
	(up-timer-status stancet == timer-triggered)
	(up-compare-goal feinde <= 1)
	(players-stance any-human-neutral ally)
	(game-time > 2)
	(goal request 0)
	(goal stanceg 0)
=>
	(disable-timer stancet)
;	(chat-to-player-using-id this-any-human-neutral 22121); "2"
	(chat-to-player-using-id this-any-human-neutral string-traitor2)
	(up-jump-rule 1))
(defrule
	(up-timer-status stancet == timer-triggered)
	(up-compare-goal feinde <= 1)
	(players-stance any-human-enemy ally)
	(game-time > 2)
	(goal request 0)
	(goal stanceg 0)
=>
	(disable-timer stancet)
;	(chat-to-player-using-id this-any-human-enemy 22121); "2"
	(chat-to-player-using-id this-any-human-enemy 22026)); "It shall be war to the knife!"
#end-if
#end-if

;#end-if
#end-if; not locked

(defrule
(or	(players-tribute-memory any-human-ally wood >= 1)
(or	(players-tribute-memory any-human-ally food >= 1)
(or	(players-tribute-memory any-human-ally gold >= 1)
	(players-tribute-memory any-human-ally stone >= 1))))
=>
	;(chat-to-allies text-thank-you-tributes); this-any-human-ally
	(chat-to-player-using-id every-ally 22114); "Thanks! It will be wisely spent."
	(clear-tribute-memory this-any-human-ally wood)
	(clear-tribute-memory this-any-human-ally food)
	(clear-tribute-memory this-any-human-ally gold)
	(clear-tribute-memory this-any-human-ally stone)
	(disable-self))
(defrule ; large amounts of res required so that it doesn't chat every 60 seconds
(or	(players-tribute-memory any-human-ally wood >= 4001)
(or	(players-tribute-memory any-human-ally food >= 4001)
(or	(players-tribute-memory any-human-ally gold >= 4001)
	(players-tribute-memory any-human-ally stone >= 1301))))
=>
	;(chat-to-allies text-thank-you-tributes); this-any-human-ally
	(chat-to-player-using-id every-ally 22114); "Thanks! It will be wisely spent."
	(clear-tribute-memory this-any-human-ally wood)
	(clear-tribute-memory this-any-human-ally food)
	(clear-tribute-memory this-any-human-ally gold)
	(clear-tribute-memory this-any-human-ally stone))
#end-if
;===================================================================
; Acknowledging taunts where we cannot comply at this time
;===================================================================
(defrule
(or	(taunt-detected any-human-ally 61)
(or	(taunt-detected any-human-ally 62)
(or	(taunt-detected any-human-ally 63)
	(taunt-detected any-human-ally 64))))
=>
	;(chat-to-allies text-not-a-valid-target)
	;(chat-to-allies text-not-a-valid-target)
	(chat-to-player-using-id every-ally 22118); "Alas, I cannot help that at this time."
	(acknowledge-taunt every-ally 61)
	(acknowledge-taunt every-ally 62)
	(acknowledge-taunt every-ally 63)
	(acknowledge-taunt every-ally 64))
(defrule
(or	(taunt-detected any-human-ally 65)
(or	(taunt-detected any-human-ally 66)
(or	(taunt-detected any-human-ally 67)
	(taunt-detected any-human-ally 68))))
=>
	;(chat-to-allies text-not-a-valid-target)
	(chat-to-player-using-id every-ally 22118); "Alas, I cannot help that at this time."
	(acknowledge-taunt every-ally 65)
	(acknowledge-taunt every-ally 66)
	(acknowledge-taunt every-ally 67)
	(acknowledge-taunt every-ally 68))
(defrule
(or	(taunt-detected any-human-ally 72)
(or	(taunt-detected any-human-ally 73)
(or	(taunt-detected any-human-ally 74)
	(taunt-detected any-human-ally 75))))
=>
	(chat-to-player-using-id every-ally 22118); "Alas, I cannot help that at this time."
	(acknowledge-taunt every-ally 72)
	(acknowledge-taunt every-ally 73)
	(acknowledge-taunt every-ally 74)
	(acknowledge-taunt every-ally 75))
(defrule
(or	(taunt-detected any-human-ally 76)
(or	(taunt-detected any-human-ally 77)
(or	(taunt-detected any-human-ally 78)
	(taunt-detected any-human-ally 79))))
=>
	(chat-to-player-using-id every-ally 22118); "Alas, I cannot help that at this time."
	(acknowledge-taunt every-ally 76)
	(acknowledge-taunt every-ally 77)
	(acknowledge-taunt every-ally 78)
	(acknowledge-taunt every-ally 79))
(defrule
(or	(taunt-detected any-human-ally 80)
(or	(taunt-detected any-human-ally 81)
(or	(taunt-detected any-human-ally 82)
	(taunt-detected any-human-ally 83))))
=>
	(chat-to-player-using-id every-ally 22118); "Alas, I cannot help that at this time."
	(acknowledge-taunt every-ally 80)
	(acknowledge-taunt every-ally 81)
	(acknowledge-taunt every-ally 82)
	(acknowledge-taunt every-ally 83))
(defrule
(or	(taunt-detected any-human-ally 84)
(or	(taunt-detected any-human-ally 85)
(or	(taunt-detected any-human-ally 86)
	(taunt-detected any-human-ally 87))))
=>
	(chat-to-player-using-id every-ally 22118); "Alas, I cannot help that at this time."
	(acknowledge-taunt every-ally 84)
	(acknowledge-taunt every-ally 85)
	(acknowledge-taunt every-ally 86)
	(acknowledge-taunt every-ally 87))
(defrule
(or	(taunt-detected any-human-ally 88)
(or	(taunt-detected any-human-ally 89)
(or	(taunt-detected any-human-ally 90)
	(taunt-detected any-human-ally 91))))
=>
	(chat-to-player-using-id every-ally 22118); "Alas, I cannot help that at this time."
	(acknowledge-taunt every-ally 88)
	(acknowledge-taunt every-ally 89)
	(acknowledge-taunt every-ally 90)
	(acknowledge-taunt every-ally 91))
(defrule
(or	(taunt-detected any-human-ally 92)
(or	(taunt-detected any-human-ally 93)
(or	(taunt-detected any-human-ally 94)
	(taunt-detected any-human-ally 95))))
=>
	(chat-to-player-using-id every-ally 22118); "Alas, I cannot help that at this time."
	(acknowledge-taunt every-ally 92)
	(acknowledge-taunt every-ally 93)
	(acknowledge-taunt every-ally 94)
	(acknowledge-taunt every-ally 95))
(defrule
(or	(taunt-detected any-human-ally 96)
(or	(taunt-detected any-human-ally 97)
(or	(taunt-detected any-human-ally 98)
	(taunt-detected any-human-ally 99))))
=>
	(chat-to-player-using-id every-ally 22118); "Alas, I cannot help that at this time."
	(acknowledge-taunt every-ally 96)
	(acknowledge-taunt every-ally 97)
	(acknowledge-taunt every-ally 98)
	(acknowledge-taunt every-ally 99))
(defrule
(or	(taunt-detected any-human-ally 100)
(or	(taunt-detected any-human-ally 101)
	(taunt-detected any-human-ally 102)))
=>
	(chat-to-player-using-id every-ally 22118); "Alas, I cannot help that at this time."
	(acknowledge-taunt every-ally 100)
	(acknowledge-taunt every-ally 101)
	(acknowledge-taunt every-ally 102))
(defrule
	(taunt-detected any-human-ally 103)
=>
	(chat-to-player-using-id every-ally 22118); "Alas, I cannot help that at this time."
	(acknowledge-taunt every-ally 103))
;===================================================================
; Chats
;===================================================================
#load-if-defined UP-HUMAN-IN-GAME
(defrule
(or	(game-time < tribute-delay2)
(or	(up-compare-goal underattack != no)
(or	(up-compare-goal custom-civ-pop >= up-max-civ)
(or	(population >= max-civ-pop)
(or	(players-building-type-count any-ally market <= 0)
(or	(and	(players-civilian-population every-ally < up-max-civ)
		(players-population every-ally < max-civ-pop))
	(strategic-number sn-current-age >= cimperial)))))))
=>
	(up-jump-rule 2))
(defrule
	(building-type-count town-center <= 0)
	(unit-type-count-total villager <= 0)
=>
	(up-jump-rule 1))
(defrule
	(players-current-age any-enemy >= imperial-age)
	(players-current-age any-ally >= imperial-age)
	(strategic-number sn-military-superiority <= -2)
(or	(up-allied-resource-amount any-ally wood >= 2600)
(or	(up-allied-resource-amount any-ally food >= 2600)
(or	(up-allied-resource-amount any-ally gold >= 2600)
	(up-allied-resource-amount any-ally stone >= 1300))))
	(up-compare-goal excessWood < 200)
	(up-compare-goal excessFood < 200)
	(up-compare-goal excessGold < 200)
	(up-compare-goal excessStone < 100)
=>
	(chat-to-player-using-id every-ally 22113); "Quick! Pay tribute me in resources or all is lost!"
	(disable-self)); end jump
#load-if-not-defined DE-AVAILABLE
(defrule
;	(up-timer-status wrongchat == timer-disabled)
	(up-timer-status embassy == timer-running)
=>
	(up-jump-rule 31))

(defrule
	(players-current-age-time target-player < 10)
	(players-current-age-time target-player > 0); for more realism?
	(players-current-age target-player >= imperial-age)
	(game-time >= 120)
	(up-compare-goal strategy != sling)
	(current-age <= feudal-age)
=>
	(chat-to-all text-ohh); "Ohh... :'"
	(disable-self))
(defrule
	(game-time < 600)
(or	(unit-type-count 449 >= 1)
	(unit-type-count 754 >= 1))
	(current-age <= dark-age)
	(military-population <= 0)
	(players-military-population every-enemy == 1)
	(players-current-age every-enemy <= dark-age)
=>
	(chat-to-all text-that-was-mean); "That was mean... :'"
	(disable-self))
(defrule
	(game-time < 600)
	(up-compare-const dm-game != 1)
	(goal defend yes)
	(players-military-population any-enemy >= 2)
	(military-population <= 1)
	(players-current-age every-enemy <= dark-age)
	(current-age <= dark-age)
=>
	(chat-to-all text-dot); "..."
	(disable-self))
(defrule
	(game-time < 600)
	(up-compare-const dm-game != 1)
;	(goal defend yes)
	(players-military-population every-enemy == 1)
	(military-population <= 1)
(or	(unit-type-count-total 217 >= 1)
	(unit-type-count-total 227 >= 1))
	(players-current-age every-enemy <= dark-age)
	(current-age <= dark-age)
=>
	(chat-to-all text-im-so-bad); "I'm so bad at this game... ;_;"
	(disable-self))
(defrule; 5
	(game-time >= 5555); 4444
	(strategic-number sn-current-age >= imperial)
	(strategic-number teamsuperiority <= 0); 1
	(strategic-number sn-military-superiority <= 0); 1
	(strategic-number teamsuperiority >= 0); -1
	(strategic-number sn-military-superiority >= 0); -1
	(population > up-max-civ)
=>
	(chat-to-all text-what-a-game); "Great game!"
	(disable-self))
(defrule
	(game-time >= 1470); 1111
	(player-in-game any-human-ally)
	(strategic-number sn-current-age < imperial)
	(strategic-number sn-military-superiority <= -1)
	(strategic-number target-civilian-superiority <= -12); -6
	(strategic-number teamsuperiority >= 1)
(or	(civilian-population >= 24)
	(civilian-population >= up-max-civ))
	(population < max-civ-pop); del-civ-pop
	(up-compare-goal gl-threat-time > 24000)
	(up-compare-goal strategy != sling)
=>
	;(chat-to-allies text-sorry-team); "Sorry, i haven't been doing well so far... :'"
	;(chat-to-allies text-ill-do-better); "I'll do my best to be useful asap!"
	(disable-self))
(defrule
	(game-time >= 19)
	(up-allied-goal any-computer-ally identity == Barbarian)
	(up-compare-goal gl-random-number <= 13)
=>
	(chat-to-all text-hey-barbie); "Hey Barbie, it's awesome to have you in my team!"
	(chat-to-all text-hey-barbie-2); "Let's win this together. <3"
	(disable-self))
(defrule
	(game-time >= 19)
	(up-allied-goal any-computer-ally identity == Juggernaut)
	(taunt-detected any-computer-ally 125)
	(up-compare-goal gl-random-number >= 14)
	(up-compare-goal gl-random-number <= 25)
=>
	(chat-to-all text-hey-jugger); "Hey Jugger, with you in my team i'm confident that we can win!"
	(disable-self))
(defrule
	(game-time >= 19)
	(up-allied-goal any-computer-ally identity == Promi)
	(up-compare-goal gl-random-number >= 26)
	(up-compare-goal gl-random-number <= 38)
=>
	(chat-to-all text-hey-promi); "Hey fellow Promi, i'm really happy to have you in my team. <3"
	(disable-self))
(defrule; 10
	(game-time >= 19)
	(up-allied-goal any-computer-ally identity == Horde)
	(up-compare-goal gl-random-number >= 39)
	(up-compare-goal gl-random-number <= 50)
=>
	(chat-to-all text-hey-horde); "Hello Horde, it's great to have you on my side."
	(chat-to-all text-hey-horde-2); "Let's defeat our enemies together!"
	(disable-self))
(defrule
	(game-time >= 19)
	(up-allied-goal any-computer-ally identity == Unknown)
	(up-compare-goal gl-random-number >= 51)
	(up-compare-goal gl-random-number <= 63)
=>
	(chat-to-all text-hey-unknown); "Hey Unknown, i don't know what you will do but i hope it works!"
	(chat-to-all text-hey-horde-2); "Let's defeat our enemies together!"
	(disable-self))
(defrule
	(game-time >= 19)
	(up-allied-goal any-computer-ally identity == BruteForce)
	(up-compare-goal gl-random-number >= 64)
	(up-compare-goal gl-random-number <= 75)
=>
	(chat-to-all text-hey-brute); "Bruty! I'm happy to be allied with you! :)"
	(disable-self))
(defrule
	(game-time >= 19)
	(up-allied-goal any-computer-ally identity == Illuminati)
	(up-compare-goal gl-random-number >= 76)
	(up-compare-goal gl-random-number <= 88)
=>
	(chat-to-all text-hey-illuminati); "Confirmed."
	(disable-self))
(defrule
	(game-time >= 19)
	(up-allied-goal any-computer-ally identity == TRiBaL)
	(up-compare-goal gl-random-number >= 89)
	(up-compare-goal gl-random-number <= 100)
=>
	(chat-to-all text-hey-TRiBaL); "TRiBaL, let's show them what real warriors look like!"
	(disable-self))
(defrule
	(up-compare-goal gl-random-number == 85)
(or	(player-number 1)
	(not	(taunt-detected any-human 200)))
	(game-time >= 86)
=>
	(up-change-name "scripter16")
	(up-jump-rule 1);
	(disable-self))
(defrule
	(up-compare-goal gl-random-number == 85)
(or	(player-number 1)
	(not	(taunt-detected any-human 200)))
	(game-time >= 88)
=>
	(chat-to-all text-kitties); "Kitties are sooo cuuute!!"
	(up-change-name "Promi")
	(disable-self))
(defrule; 15
	(up-compare-goal gl-random-number == 86)
	(game-time > 600)
(or	(goal defend yes)
	(goal underattack yes))
	(strategic-number sn-military-superiority <= -1)
	(strategic-number target-civilian-superiority <= -4)
	(population < up-max-civ)
(or	(not	(player-in-game any-computer-enemy))
	(strategic-number teamsuperiority <= -1))
	(up-compare-goal strategy != sling)
=>
	(chat-to-all text-youre-good); "You're strong!"
	(disable-self))
(defrule
	(up-compare-goal gl-random-number == 87)
	(strategic-number sn-military-superiority <= -3)
	(building-type-count town-center >= 1)
	(goal underattack yes)
=>
	(chat-to-all text-turn-this-on); "how do you turn this on"
	(disable-self))
(defrule
	(up-compare-goal gl-random-number == 88)
	(goal attacking yes)
	(game-time > 420)
(or	(unit-type-count archery-class >= 48)
	(unit-type-count cavalry-archer-class >= 48))
=>
	(chat-to-all text-free-arrows); "I'm giving away free arrows today, meet my archers to collect them!"
	(disable-self))
(defrule
	(up-compare-goal gl-random-number == 89)
(or	(goal patrolhelp yes)
(or	(taunt-detected any-ally 222)
(or	(up-timer-status unit-control-flare-timer2 == timer-running)
	(up-allied-goal any-computer-ally underattack == 1))))
	(strategic-number sn-military-superiority >= 0)
	(up-compare-goal gl-threat-time > 25000)
	(strategic-number teamsuperiority <= -1)
=>
	(chat-to-all text-hey-look-cookies); "Hey look... I'll give you some of my fav cookies"
	(chat-to-all text-but-leave-friend-alone); "please just don't attack my friend... or me"
	(disable-self))
(defrule
	(up-compare-goal gl-random-number == 90)
	(game-time > 468)
=>
	(chat-to-all text-binary-heart); "00111100 00110011" <3
	(disable-self))
(defrule; 20
	(up-compare-goal gl-random-number == 91)
	(strategic-number sn-military-superiority <= -1)
	(strategic-number teamsuperiority <= 0)
	(goal underattack yes)
=>
	(chat-to-all text-cant-we-talk); "Can't we talk about this? :<"
	(disable-self))
(defrule
	(up-compare-goal gl-random-number == 92)
	(game-time >= 333)
=>
	(chat-to-all text-thanks-for-playing); "Thanks for playing with me!"
	(chat-to-all text-nice-to-play-with-hoomans); "It's always nice to play with hoomans. <3"
	(disable-self))
(defrule
	(up-compare-goal gl-random-number == 93)
	(game-time < 2400)
	(goal underattack yes)
	(strategic-number sn-military-superiority <= -1)
	(strategic-number teamsuperiority >= -2)
	(population < max-civ-pop)
=>
	(chat-to-all text-have-to-defend); "I have to defend this..."
	(chat-to-all text-GLaDOS); "Else i'll get scolded by mother GLaDOS again... :'"
	(disable-self))
(defrule
	(up-compare-goal gl-random-number == 94)
	(players-current-age every-enemy >= castle-age)
	(current-age <= feudal-age)
	(strategic-number sn-military-superiority <= -1)
	(strategic-number teamsuperiority <= 0)
	(up-compare-goal strategy != sling)
=>
	(chat-to-all text-not-my-best-game); "Not my best game... :'"
	(disable-self))
(defrule
	(up-compare-goal gl-random-number == 95)
	(goal attacking yes)
	(players-military-population target-player <= 17)
	(military-population >= 34)
	(game-time >= 245)
=>
	(chat-to-all text-actually-doing-well); "I'm actually doing well so far!"
	(chat-to-all text-keep-concentrating-Promi); "Keep concentrating Promi, you can do it!"
	(disable-self))
(defrule; 25
	(up-compare-goal gl-random-number == 96)
	(goal underattack yes)
(or	(up-compare-const mp-game == 0)
	(not	(player-in-game every-ally)))
	(population < up-max-civ)
	(players-population any-enemy > max-civ-pop)
=>
	(chat-to-all-using-range 22301 21); 22300 22
	(chat-to-all text-save-and-exit); "Please save and exit!"
	(disable-self))
(defrule
	(up-compare-goal gl-random-number == 97)
	(game-time > 660)
	(food-amount < 50)
=>
	(chat-to-all text-cheese-steak); "cheese steak jimmy's"
	(disable-self))
(defrule
	(up-compare-goal gl-random-number == 98)
	(up-compare-goal strategy-type == feudal-war)
	(current-age == feudal-age)
	(current-age-time >= 35)
=>
	(chat-to-all text-scorpion-bluff); "They certainly won't expect my scorpion rush! >:D"
	;(chat-to-allies text-krush-bluff-3); "Or am i just bluffing..? :p"
	(enable-timer wrongchat 5)
	(disable-self))
(defrule
	(up-compare-goal gl-random-number == 99)
	(strategic-number sn-current-age == dark)
;	(up-compare-goal strategy != drush)
	(up-compare-goal gl-threat-time > 25000)
	(current-age-time >= 510)
	(player-in-game any-ally)
	(goal underattack no)
=>
	(chat-to-all text-drush-bluff); "Alright, now we take our militias and attack!"
	(enable-timer wrongchat 5)
	(disable-self))
(defrule
	(up-compare-goal gl-random-number == 100)
;	(up-compare-goal strategy != krush)
	(unit-type-count-total knight-line <= 1)
	(strategic-number sn-current-age >= castlea)
	(current-age-time >= 90)
	(goal attacking no)
	(game-time < 1500)
	(goal underattack no)
(nor	(civ-selected aztec)
(or	(civ-selected incan)
	(civ-selected mayan)))
=>
	(chat-to-all text-krush-bluff); "The best of my knights are already on their way to your base."
	(chat-to-all text-krush-bluff-2); "Be wise and resign now to end this peacefully!"
	;(chat-to-allies text-krush-bluff-3); "Or am i just bluffing..? :p"
	(disable-self)); end jump
(defrule
	(timer-triggered wrongchat)
=>
	(disable-timer wrongchat)
	(chat-to-all text-wrong-chat)); "Oops, i accidentally wrote that to everyone..."
#end-if; not DE available
#end-if; hooman ingame